@model  ArabErp.Domain.SalesInvoice
@{
    ViewBag.Title = "CreateSalesInvoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    var totalQuantity = Model.SaleInvoiceItems.Sum(a => a.QuantityTxt);
    var totalDiscount = Model.SaleInvoiceItems.Sum(a => a.Discount);
    var totalAmount = Model.SaleInvoiceItems.Sum(a => a.Amount);

}


<script>
    function Back() {
        location.href = '@Url.Action("PendingSalesInvoice")';
    }
    $(document).ready(function () {

                toastr.options = {
                    "closeButton": true,
                    "positionClass": "toast-bottom-full-width",
                    "preventDuplicates": false,
                    "onclick": null,
          
                    "timeOut": "0",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                if ('@TempData["success"]' != "" && '@TempData["SalesInvoiceRefNo"]' != "" )
                {
                    toastr.success('@TempData["success"]' + '   Sales Order No. is : ' + '@TempData["SalesInvoiceRefNo"]');
                }
                else if ('@TempData["error"]' != "") {
                    toastr.error('@TempData["error"]');
                }
         
        $("#Addition").keyup(function () {
            
            var TotalAmt = '@Model.SaleInvoiceItems.Sum(a => a.Amount)';
            var Total = parseFloat("0");
          
            Total = parseFloat(TotalAmt)
            if (isNaN(Total)) {
                Total = parseFloat("0");
            }
            var AdditonAmt = parseFloat("0");
            AdditonAmt = $("#Addition").val();
           
            AdditonAmt = parseFloat(AdditonAmt);
            if (isNaN(AdditonAmt)) {
                AdditonAmt = parseFloat("0");
            }
                var DeductionAmt = parseFloat("0");
                DeductionAmt = $("#Deduction").val();
                
                DeductionAmt = parseFloat(DeductionAmt);
                if (isNaN(DeductionAmt)) {
                    DeductionAmt = parseFloat("0");
                }
                Tot = Total + AdditonAmt - DeductionAmt;
                $("#TotalAmount").text(Tot);
        });

        $("#Deduction").keyup(function () {

            var TotalAmt = '@Model.SaleInvoiceItems.Sum(a => a.Amount)';
            var Total = parseFloat("0");

            Total = parseFloat(TotalAmt)
            if (isNaN(Total)) {
                Total = parseFloat("0");
            }
            var AdditonAmt = parseFloat("0");
            AdditonAmt = $("#Addition").val();

            AdditonAmt = parseFloat(AdditonAmt);
            if (isNaN(AdditonAmt)) {
                AdditonAmt = parseFloat("0");
            }
            var DeductionAmt = parseFloat("0");
            DeductionAmt = $("#Deduction").val();

            DeductionAmt = parseFloat(DeductionAmt);
            if (isNaN(DeductionAmt)) {
                DeductionAmt = parseFloat("0");
            }
            Tot = Total + AdditonAmt - DeductionAmt;
            $("#TotalAmount").text(Tot);
        });
        $(".numbers-only").keypress(function (e) {
            if (e.which == 8 || (e.which == 46 && $(this).val().indexOf('.') == -1) || (e.which > 47 && e.which < 58)) { } else { return false; }
        });
    });
   

</script>
        <div class="container">

            <div class="row">

                <div class="form-head1">
                    <h4>Sales Invoice</h4>
                </div>
                <div class="main-part pad1">
                    @using (Html.BeginForm("Save", null, FormMethod.Post, new { @class = "createFrom", @id = "saleorder_form" }))
                    {
                        <div class="row form-group ">
                            <div class="col-md-2">
                                <label for="SaleOrderRefNo">Invoice Ref. No.</label>
                                @Html.HiddenFor(m => Model.SaleOrderId)
                                @Html.TextBoxFor(m => m.SalesInvoiceRefNo, new { @class = "form_input", autocomplete = "off" })
                            </div>
                            <div class="col-md-2">
                                <label for="SaleOrderDate">Date</label>
                                @Html.TextBoxFor(m => m.CurrentDate, String.Format("{0:dd/MM/yyyy}", Model.CurrentDate), new { @class = "form_input ", autocomplete = "off", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-md-4">
                                <label for="selectCustomer">Customer</label>
                                @*@Html.DropDownListFor(m => Model.Customer, (SelectList)ViewBag.customerlist, "Select Customer", new { @class = "form_input", autocomplete = "off", @onchange = "CustomerChanged(this);" })*@
                                @Html.TextBoxFor(m => Model.Customer, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                            </div>

                            <div class="col-md-4">
                                <label for="CustomerOrderRef">Customer Address</label>
                                @Html.TextBoxFor(m => m.CustomerAddress, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                                @*<input type="text" id="CustomerAddress" class="form_input" autocomplete="off" />*@
                            </div>
                            <div class="col-md-2">
                                <label for="CustomerOrderRef">Customer Order Ref.</label>
                                @Html.TextBoxFor(m => m.CustomerOrderRef, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                            </div>
                            
                        </div>
                        <div class="row form-group">

                        </div>

    <div class="table-responsive">
        <table class="table table-bordered table-hover" id="tab_logic">
            <thead>
                <tr class="grid_heading">
                    <th width="2%" class="text-center"><h1>#</h1></th>
                    <th width="25%" class="text-center"><h1>Work Description</h1></th>
                    <th width="25%" class="text-center"><h1>Vehicle Model</h1></th>
                    <th width="5%" class="text-right"><h1>Qty</h1></th>
                    <th width="10%"><h1>UoM</h1></th>
                    <th width="10%" class="text-right"><h1>Rate</h1></th>
                    <th width="10%" class="text-right"><h1>Discount</h1></th>
                    <th width="8%" class="text-right"><h1>Amount</h1></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.SaleInvoiceItems.Count; i++)
                {
                    <tr id="Row_@i">
                        <td>@(i+1) </td>
                        @Html.HiddenFor(m=>Model.SaleInvoiceItems[i].SaleOrderItemId)
                        @Html.HiddenFor(m => Model.SaleInvoiceItems[i].SaleOrderId)
                        @Html.HiddenFor(m => Model.SaleInvoiceItems[i].JobCardId)
                        <td>@Html.TextBoxFor(m => Model.SaleInvoiceItems[i].WorkDescription, new { @class = "form_input", autocomplete = "off", @style = "text-align:left", placeholder = "Rate", @readonly = "readonly" })</td>
                        <td>@Html.TextBoxFor(m => Model.SaleInvoiceItems[i].VehicleModelName, new { @class = "form_input", autocomplete = "off", @style = "text-align:left", placeholder = "Rate", @readonly = "readonly" })</td>
                        <td>@Html.TextBoxFor(m => Model.SaleInvoiceItems[i].QuantityTxt, new { @class = "form_input", autocomplete = "off", @style = "text-align:right", placeholder = "Rate", @readonly = "readonly" })</td>
                        <td>@Html.TextBoxFor(m => Model.SaleInvoiceItems[i].Unit, new { @class = "form_input", autocomplete = "off", @style = "text-align:left", placeholder = "Rate", @readonly = "readonly" })</td>
                        <td>@Html.TextBoxFor(m => Model.SaleInvoiceItems[i].Rate, new { @class = "form_input", autocomplete = "off", @style = "text-align:right", placeholder = "Discount", @readonly = "readonly" })</td>
                        <td>@Html.TextBoxFor(m => Model.SaleInvoiceItems[i].Discount, new { @class = "form_input clAmount", autocomplete = "off", @style = "text-align:right", placeholder = "Amount", @readonly = "readonly" })</td>
                        <td>@Html.TextBoxFor(m => Model.SaleInvoiceItems[i].Amount, new { @class = "form_input clAmount", autocomplete = "off", @style = "text-align:right", placeholder = "Amount", @readonly = "readonly" })</td>
                    </tr>
                }
                @*<tr id='addr1'></tr>*@
            </tbody>
            <tfoot>
                <tr class="grid_heading">
                    <th width="5%" class="text-center"><h1></h1></th>
                    <th width="25%" class="text-center"><h1></h1></th>
                    <th width="25%" class="text-center"><h1>Total</h1></th>
                    <th width="5%" class="text-right">@totalQuantity</th>
                    <th width="10%"></th>
                    <th width="10%" class="text-right"><h1></h1></th>
                    <th width="7%" class="text-right">@totalDiscount</th>
                    <th width="8%" class="text-right">@totalAmount</th>
                </tr>
            </tfoot>
        </table>
    </div>
                        
                        <div class="row form-group">
                            <div class="col-md-12">
                                <div class="part1">
                             
                                
                                        @*@Html.TextBoxFor(m=>m.CurrencySymbol)*@
                                    <label for="SpecialRemarks" class="tamount"><b>@(Model.CurrencySymbol)<span id="TotalAmount">@totalAmount </span></b></label>
                              
                                    
                                </div>
                               
                            </div>
                        </div>



                        <div class="row form-group">

                                <div class="part1">
                                    <div class="col-md-1"><label for="SpecialRemarks">Spl.Remarks</label></div>
                                    <div class="col-md-11"> @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h", autocomplete = "off" })</div>
                                      
                                    </div>
                                <div class="part">
                                    <div class="col-md-1"><label for="PaymentTerms">Pay.Terms</label></div>
                                    <div class="col-md-11">@Html.TextBoxFor(m => m.PaymentTerms, new { @class = "form_input", autocomplete = "off" })</div>
                                        

                                    </div>

                        </div>
                        
                        <div class="row form-group">
                         
                                <div class="col-md-3">
                                    <label for="PaymentTerms">Additional</label>
                                    @Html.TextBoxFor(m => m.Addition, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @Value = "0.00" })
                                </div>
                                <div class="col-md-9">
                                    <label for="PaymentTerms">Remarks</label>
                                    @Html.TextBoxFor(m => m.AdditionRemarks, new { @class = "form_input clAmount", autocomplete = "off" })
                                </div>
                        
                            </div>
                          <div class="row form-group">
                        
                                <div class="col-md-3">
                                    <label for="PaymentTerms">Deduction</label>
                                    @Html.TextBoxFor(m => m.Deduction, new { @class = "form_input numbers-only clAmount", @style = "text-align:right", autocomplete = "off", @Value = "0.00" })
                                </div>
                                <div class="col-md-9">
                                    <label for="PaymentTerms">Remarks</label>
                                    @Html.TextBoxFor(m => m.DeductionRemarks, new { @class = "form_input", autocomplete = "off" })
                                </div>
                         
                            </div>
                        
       <div class="row">
        <div class="col-md-12 hrpart">
            <button class="form-button right" onclick="Back()">Exit</button>
            <button type="submit" class="form-button right">Save</button>
        </div>

    </div>

                    }
                </div>
                </div>
        </div>

