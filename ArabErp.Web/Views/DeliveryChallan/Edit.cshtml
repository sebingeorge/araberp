@model ArabErp.Domain.DeliveryChallan

@{
    ViewBag.Title = "Edit Delivery Challan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(function () {

        $("#DeliveryChallanDate").datepicker({
            dateFormat: "dd-MM-yy"
        });
        var year = new Date().getFullYear();
        $("#TransportWarrantyExpiryDate").datepicker({
            dateFormat: "dd-MM-yy",
            changeYear: true,
            changeMonth: true,
            yearRange: year + ":" + (year + 3)
        });
        //$("#DeliveryChallanDate").datepicker({ dateFormat: "dd-MM-yy" });
    });
    $(document).ready(function () {
        $.getJSON('@Url.Action("GetJobCardDetails")', { id: '@Model.JobCardId' },
            function (data) {
                $("#txtJCNoDate").val(data.JobCardNoDate);
                $("#txtSONoDate").val(data.SaleOrderNoDate);
                $("#txtCustomerOrderRef").val(data.CustomerOrderRef);
                $("#txtVehicleModel").val(data.VehicleModel);
                $("#txtWork").val(data.WorkDescr);
                $("#txtCustomer").val(data.CustomerName);
                $("#txtRegNo").val(data.RegistrationNo);
                $("#txtPaymentTerms").val(data.PaymentTerms);
            });
    });

    function formValidation() {
        return true;//confirm("Are you sure to Save?");
    }

    function Back() {
        var url = '@Url.Action("DeliveryChallanList")';
        window.location = url;
    }

    function GoToPrint() {
        var url = '@Url.Action("Print", new { Id = Model.DeliveryChallanId })';
        window.location = url;
    }

    function Delete() {
        var url = '@Url.Action("Delete", new { DeliveryChallanId = Model.DeliveryChallanId })';
        window.location = url;
    }

</script>


<div class="row">
    <div class="form-head1">
        <h4>Delivery Challan</h4>
    </div>
    <div class="main-part pad1">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "createFrom", onsubmit = "return formValidation()", @id = "vehicle-inpass-form" }))
        {
            <div class="row form-group">
                <div class="col-md-2">
                    <label>Delivery Challan No.</label>
                    @Html.HiddenFor(m => m.JobCardId)
                    @Html.HiddenFor(m => m.DeliveryChallanId)
                    @Html.TextBoxFor(m => m.DeliveryChallanRefNo, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                </div>
                <div class="col-md-2">
                    <label>Challan Date</label>
                    @Html.TextBoxFor(m => m.DeliveryChallanDate, Model.DeliveryChallanDate.ToString("dd-MMMM-yyyy"), new { @class = "form_input ", autocomplete = "off", @required = "true", @readonly = "true" })
                    @*@Html.TextBoxFor(m => m.DeliveryChallanDate, new { @class = "form_input", @type = "date" })*@
                </div>
                <div class="col-md-2">
                    <label for="TransportWarrantyExpiryDate">Warranty Expiry Date</label>
                    @Html.TextBoxFor(m => m.TransportWarrantyExpiryDate, Model.TransportWarrantyExpiryDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input", @readonly = "true", @required = "true" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-4">
                    <label>Customer</label>
                    @Html.TextBoxFor(m => Model.Customer, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                    @*<input type="text" class="form_input" id="txtCustomer" readonly />*@
                </div>
                <div class="col-md-2" title="Sale Order Ref. No. and Date">
                    <label>SO. No. &amp; Date</label>
                    @Html.TextBoxFor(m => Model.SONODATE, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                    @*<input type="text" class="form_input" id="txtSONoDate" readonly />*@
                </div>
                <div class="col-md-2">
                    <label>Customer Order Ref No.</label>
                    @Html.TextBoxFor(m => Model.CustomerOrderRef, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                    @*<input type="text" class="form_input" id="txtCustomerOrderRef" readonly />*@
                </div>
                <div class="col-md-2" title="Job Card Ref. No. and Date">
                    <label>JC. No. &amp; Date</label>
                    @Html.TextBoxFor(m => Model.JobCardNo, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                    @*<input type="text" class="form_input" id="txtJCNoDate" readonly />*@
                </div>
                <div class="col-md-2">
                    <label>Chassis No./Reg No.</label>
                    @Html.TextBoxFor(m => Model.RegistrationNo, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                    @*<input type="text" class="form_input" id="txtRegNo" readonly />*@
                </div>

            </div>

            <div class="row form-group">

                <div class="col-md-12">
                    <label>Work Description</label>
                    @Html.TextAreaFor(m => Model.WorkDescr, new { @class = "form_input form_input-h1", autocomplete = "off", @readonly = "readonly" })
                    @*<textarea class="form_input form_input-h1" id="txtWork" readonly></textarea>*@
                </div>
            </div>
            <div class="row form-group">

                <div class="col-md-4">
                    <label>Vehicle Model</label>
                    @Html.TextBoxFor(m => Model.VehicleModel, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                    @*<input type="text" class="form_input" id="txtVehicleModel" readonly />*@
                </div>
                <div class="col-md-3">
                    <label>Employee</label>
                    @Html.DropDownListFor(m => m.EmployeeId, (SelectList)ViewBag.employeeList, "Select Employee", new { @class = "form_input", @required = "true" })
                </div>
            </div>


            <div class="table-responsive scroll4">
                <table class="table table-bordered">
                    <thead>
                        <tr class="grid_heading">
                            <th width="2%" class="text-center">#</th>
                            <th width="30%"><h1>Serial Number</h1></th>
                            <th width="30%"><h1>Material/Spares</h1></th>
                            <th width="10%" nowrap><h1>Warranty Period (in months)</h1></th>
                        </tr>
                    </thead>
                    <tbody class="grid_row">
                        @if (Model.ItemBatches.Count > 0)
                        {
                            int i = 0;
                            foreach (var item in Model.ItemBatches)
                            {
                                <tr>
                                    <td align="center">
                                        @Html.HiddenFor(m => m.ItemBatches[i].ItemBatchId)
                                        @*<input class="form_input" value="*@@(i + 1)@*" disabled />*@
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m.ItemBatches[i].SerialNo, new { @class = "form_input", @readonly = "true" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m.ItemBatches[i].ItemName, new { @class = "form_input", @readonly = "true" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m.ItemBatches[i].WarrantyPeriodInMonths, new { @class = "form_input", @required = "true" })
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4">
                                    <center>
                                        <em>
                                            There are no reserved items found for this Job Card!
                                        </em>
                                    </center>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="row">
                <div class="col-md-12">
                    @*<label for="PrintDescription">Print Description</label>
                        @Html.TextAreaFor(m=>m.PrintDescription, new { @class = "form_input", @style = "height: 109px" })*@
                    @Html.Partial("_PrintDescriptionGrid", Model)
                </div>
            </div>
            @*<div class="col-md-12">*@
            <div class="row form-group">
                <div class="col-md-12">
                    <label>Payment Terms</label>
                    <textarea id="txtPaymentTerms" class="form_input form_input-h" readonly="readonly" tabindex="-1"></textarea>
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-12">
                    <label>Special Remarks</label>
                    @Html.TextAreaFor(m => m.Remarks, new { @class = "form_input form_input-h" })
                </div>
            </div>
            @*</div>*@

            <div class="row">
                <div class="col-md-12 col-md hrpart">
                    <input class="form-button right" type="button" value="Exit" onclick="Back()" />
                    @if (Model.IsUsed)
                    {
                        <span class="perm">
                            <em>**Cannot edit/delete this Delivery Challan, because it is either used in another process or completed.</em>
                        </span>
                    }
                    else
                    {
                        <button type="submit" class="form-button right">Edit</button>
                        <input type="button" class="form-button left" value="Delete" onclick="Delete()" />
                    }
                    <input type="button" class="form-button right" value="Print" onclick="GoToPrint()" />
                </div>
            </div>
        }

    </div>
</div>
