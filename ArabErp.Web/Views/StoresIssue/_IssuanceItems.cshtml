@model ArabErp.Domain.StoreIssue

<script type="text/javascript">

    $(document).ready(function () {
        //bind keypress event for new row inputs.
        $(".numbers-only").keypress(function (e) {
            if (e.which == 8 || (e.which == 46 && $(this).val().indexOf('.') == -1) || (e.which > 47 && e.which < 58)) { } else { return false; }
        });
    });

    function ValidateQuantity(s, i) {
        var current = Number($(s).val());
        var stock = Number($("#Items_" + i + "__StockQuantity").val());
        var pending = Number($("#Items_" + i + "__PendingQuantity").val());
        if (!isNaN(current)) {
            if (current > pending) {
                toastr.info('Only ' + pending + ' ' + $("#Items_" + i + "__UnitName").val() + ' of ' + $("#Items_" + i + "__ItemName").val() + ' is required.');
                $(s).val(stock < pending ? stock : pending);
            }
            else if (current > stock) {
                if (stock == 0)
                    if (Number($("#StockpointId").val()) == ''){
                        toastr.info("Please select a stockpoint");
                    }
                    else {
                        toastr.info('Not enough stock available for the material. Please add stock before issuing.');
                    }
                else
                    toastr.info('Not enough stock available for the material.');
                $(s).val(stock < pending ? stock : pending);
            }
        }
        else toastr.info("Please enter a valid number");
    }
</script>

<tbody class="grid_row">
    @for (int i = 0; i < Model.Items.Count; i++)
    {
        <tr id="@i">
            <td align="center">
                <span>@(i + 1)</span>
                @Html.HiddenFor(m => m.Items[i].WorkShopRequestItemId)
                @Html.HiddenFor(m => m.Items[i].ItemId)
            </td>
            <td>
                @Html.TextBoxFor(m => m.Items[i].ItemName, new { @class = "form_input", @readonly = "true", @style = "background:#fefefe" })
            </td>
            <td>@Html.TextBoxFor(m => m.Items[i].RequiredQuantity, new { @class = "form_input text-right", @readonly = "true" })</td>
            <td>@Html.TextBoxFor(m => m.Items[i].IssuedQuantity, new { @class = "form_input text-right", @readonly = "true" })</td>
            <td>
                @Html.TextBoxFor(m => m.Items[i].PendingQuantity, new { @class = "form_input text-right", @readonly = "true" })
            </td>
            <td>
                @Html.TextBoxFor(m => m.Items[i].StockQuantity, new { @class = "form_input text-right", @readonly = "true" })
            </td>
            <td>
                @Html.TextBoxFor(m => m.Items[i].CurrentIssuedQuantity, new { @class = "form_input text-right numbers-only", @placeholder = "Qty", @onchange = "ValidateQuantity(this, " + @i + ")" })
            </td>
            <td>
                @Html.TextBoxFor(m => m.Items[i].UnitName, new { @class = "form_input", @readonly = "true" })
            </td>
        </tr>
    }
</tbody>