@model ArabErp.Domain.PurchaseBill
<script>
    $(document).ready(function () {
    
        $("#Addition").keyup(function () {
          
            var Total = parseFloat("0");
            var AdditonAmt = parseFloat("0");
            var DeductionAmt = parseFloat("0");

            var NetAmt = '@Model.Items.Sum(a => a.TotAmount)';
            var TotNetAmt = parseFloat("0");

            TotNetAmt = parseFloat(NetAmt)
            if (isNaN(TotNetAmt)) {
                TotNetAmt = parseFloat("0");

            }
          
        AdditonAmt = parseFloat($("#Addition").val());
    
       if (isNaN(AdditonAmt)) {
           AdditonAmt = parseFloat("0");
       }
        var DeductionAmt = parseFloat($("#Deduction").val());
        if (isNaN(DeductionAmt)) {
            DeductionAmt = parseFloat("0");
        }

        Total = TotNetAmt + AdditonAmt - DeductionAmt;
      
        $("#PurchaseBillAmount").val(Total)
        });

        $("#Deduction").keyup(function () {

            var Total = parseFloat("0");
            var AdditonAmt = parseFloat("0");
            var DeductionAmt = parseFloat("0");

            var NetAmt = '@Model.Items.Sum(a => a.TotAmount)';
            var TotNetAmt = parseFloat("0");

            TotNetAmt = parseFloat(NetAmt)
            if (isNaN(TotNetAmt)) {
                TotNetAmt = parseFloat("0");

            }
          
            AdditonAmt = parseFloat($("#Addition").val());
    
            if (isNaN(AdditonAmt)) {
                AdditonAmt = parseFloat("0");
            }
            var DeductionAmt = parseFloat($("#Deduction").val());
            if (isNaN(DeductionAmt)) {
                DeductionAmt = parseFloat("0");
            }

            Total = TotNetAmt + AdditonAmt - DeductionAmt;
         
            $("#PurchaseBillAmount").val(Total)
        });
           

        });


        
 
</script>
<div class="row form-group">
    <div class="col-md-12">
        <div class="row">
            <div class="part">
                <div class="col-md-2"><label for="Remarks">Special Remarks</label></div>
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Remarks, new { @class = "form_input form_input-h", autocomplete = "off" })
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row form-group">
    <div class="col-md-5">
        <label for="AdditionRemarks">Addition</label>
        @Html.DropDownListFor(m => m.AdditionId, (SelectList)ViewBag.additionList, "Select Addition", new { @class = "form_input" })
      
    </div>
    <div class="col-md-1">
        <label for="Addition">Add.Amt.</label>
        @Html.TextBoxFor(m => m.Addition, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @Value = "0.00" })
    </div>

    <div class="col-md-5">
        <label for="DeductionRemarks">Deduction</label>
        @Html.DropDownListFor(m => m.DeductionId, (SelectList)ViewBag.deductionList, "Select Deduction", new { @class = "form_input" })
     
    </div>
    <div class="col-md-1">
        <label for="Deduction">Ded.Amt.</label>
        @Html.TextBoxFor(m => m.Deduction, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @Value = "0.00" })
    </div>
</div>

<div class="row form-group">
   
  
    <div class="col-md-2">
        <label for="PurchaseBillAmount">Net Amount</label>
        @Html.TextBoxFor(m => m.PurchaseBillAmount, new { @class = "form_input ", @style = "text-align:right", autocomplete = "off",@readonly="readyonly" })
    </div>
</div>
