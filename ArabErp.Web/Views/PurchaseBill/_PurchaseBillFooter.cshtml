@model ArabErp.Domain.PurchaseBill
<script>
    $(document).ready(function () {

        $("#Addition").keyup(function () {

            var Total = parseFloat("0");
            var AdditonAmt = parseFloat("0");
            var DeductionAmt = parseFloat("0");

            var NetAmt = '@Model.Items.Sum(a => a.TotAmount)';
            var TotNetAmt = parseFloat("0");

            TotNetAmt = parseFloat(NetAmt)
            if (isNaN(TotNetAmt)) {
                TotNetAmt = parseFloat("0");

            }

            AdditonAmt = parseFloat($("#Addition").val());

            if (isNaN(AdditonAmt)) {
                AdditonAmt = parseFloat("0");
            }
            var DeductionAmt = parseFloat($("#Deduction").val());
            if (isNaN(DeductionAmt)) {
                DeductionAmt = parseFloat("0");
            }

            Total = TotNetAmt + AdditonAmt - DeductionAmt;

            $("#PurchaseBillAmount").val(Total.toFixed(2))
        });

        $("#Deduction").keyup(function () {

            var Total = parseFloat("0");
            var AdditonAmt = parseFloat("0");
            var DeductionAmt = parseFloat("0");

            var NetAmt = '@Model.Items.Sum(a => a.TotAmount)';
            var TotNetAmt = parseFloat("0");

            TotNetAmt = parseFloat(NetAmt)
            if (isNaN(TotNetAmt)) {
                TotNetAmt = parseFloat("0");

            }

            AdditonAmt = parseFloat($("#Addition").val());

            if (isNaN(AdditonAmt)) {
                AdditonAmt = parseFloat("0");
            }
            var DeductionAmt = parseFloat($("#Deduction").val());
            if (isNaN(DeductionAmt)) {
                DeductionAmt = parseFloat("0");
            }

            Total = TotNetAmt + AdditonAmt - DeductionAmt;

            $("#PurchaseBillAmount").val(Total.toFixed(2))
        });


    });




</script>

<br />
<div class="row form-group">
    <div class="col-md-12">
        <div class="part1">
            <label for="Remarks">Special Remarks</label>
            @Html.TextAreaFor(m => m.Remarks, new { @class = "form_input form_input-h", autocomplete = "off" })
        </div>
    </div>
</div>


<div class="row form-group" style="padding-top:7px">
    <div class="col-md-2 col-xs-4 col-sm-2">
        <label for="Addition">Addition Amount</label>
        @Html.TextBoxFor(m => m.Addition, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @readonly = "true" })
    </div>
    <div class="col-md-2 col-xs-4 col-sm-2">
        <label for="Deduction">Deduction Amount</label>
        @Html.TextBoxFor(m => m.Deduction, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @readonly = "true" })
    </div>
    <div class="col-sm-2 col-md-2 col-md-offset-6">
        <label for="PurchaseBillAmount">Total Amount</label>
        @Html.TextBoxFor(m => m.PurchaseBillAmount, new { @class = "form_input ", @style = "text-align:right;font-size: 20px;font-weight: bold;", autocomplete = "off", @readonly = "readyonly" })
    </div>
</div>
