@model  ArabErp.Domain.JobCardQC
@{
    ViewBag.Title = "Job Card QC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    function Back() {
        location.href = '@Url.Action("PendingJobCardQC")';
    }

    $(function () {
        $("#CurrentDate").datepicker({ dateFormat: "dd-MM-yy" });
        //$("#JcDate").datepicker({ dateFormat: "dd-MM-yy" });
        $("#EmployeeId").focus();
    });
</script>


<div class="row">

    <div class="form-head1">
        <h4>Job Card QC</h4>
    </div>
    @using (Html.BeginForm("Save", null, FormMethod.Post, new { @class = "createFrom", @id = "saleorder_form" }))
    {
        <div class="main-part pad1">
            <div class="row form-group">
                <div class="col-md-2">
                    <label for="jcno">Job Card QC No.</label>
                    @Html.TextBoxFor(m => m.JobCardQCRefNo, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    <label for="name" class="label1">QC Date</label>
                    @Html.TextBoxFor(m => m.CurrentDate, Model.CurrentDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @readonly = "readonly" })
                </div>
            </div>

            <div class="row form-group ">
                <div class="col-md-2">
                    <label for="name" class="label1">Job Card No.</label>
                    @Html.TextBoxFor(m => Model.JobCardNo, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                    @Html.HiddenFor(m => Model.JobCardId)
                </div>
                <div class="col-md-2">
                    <label for="name" class="label1">Job Card Date</label>
                    @Html.TextBoxFor(m => m.JcDate, Model.JcDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                </div>
                <div class="col-md-3">
                    <label for="name" class="label1">Customer</label>
                    @Html.TextBoxFor(m => Model.Customer, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                </div>
                <div class="col-md-3">
                    <label for="name" class="label1">Vehicle Model</label>
                    @Html.TextBoxFor(m => Model.VehicleModel, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                </div>
            </div>
            <div class="wrap">
                <div class="table-responsive">

                    <div class="wrap">
                        <table class="table table-bordered ">
                            <tr class="grid_heading">
                                <th width="1%"><h1>#</h1></th>
                                <th width="10%"><h1>Type</h1></th>
                                <th width="80%"><h1>QC Parameter</h1></th>
                                <th width="10%"><h1>Value</h1></th>

                            </tr>
                            @for (int i = 0; i < Model.JobCardQCParams.Count(); i++)
                            {
                                <tr>
                                    <td>
                                        @*@Html.TextBoxFor(model => Model.JobCardQCParams[i].QCParamId, new { @class = "form_input" , autocomplete = "off", @readonly = "readonly"})*@
                                        @Html.HiddenFor(m => m.JobCardQCParams[i].QCParamId)
                                        @(i+1)
                                    </td>
                                    <td>@Html.TextBoxFor(model => Model.JobCardQCParams[i].ParaName, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })</td>
                                    <td>@Html.TextBoxFor(model => model.JobCardQCParams[i].QCParamName, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })</td>
                                    <td>@Html.TextBoxFor(model => model.JobCardQCParams[i].QCParamValue, new { @class = "form_input", autocomplete = "off" })</td>

                                </tr>
                            }
                        </table>


                    </div>

                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    <label for="name" class="label1">Employee</label>
                    @Html.DropDownListFor(m => Model.EmployeeId, (SelectList)ViewBag.EmployeeList, "Select Employee", new { @class = "form_input" })
                </div>
                <div class="col-md-2" style="vertical-align:middle">

                    @Html.CheckBoxFor(model => Model.IsQCPassed, new { @class = "check_box", @onclick = "Checked(this)" })
                    <label for="@Html.NameFor(x => x.IsQCPassed)">QC Passed</label>
                </div>
            </div>


            <div class="row">

                <div class="col-md-12 hrpart">
                    <button class="form-button right" onclick="Back()">Exit</button>
                    <button type="submit" class="form-button right">Save</button>

                </div>

            </div>


        </div>
    }
    @*</form>*@
</div>


