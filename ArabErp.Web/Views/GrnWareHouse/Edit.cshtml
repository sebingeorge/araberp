@model  ArabErp.Domain.GRN
@{
    ViewBag.Title = "Create";
   Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        toastr.options = {
            "closeButton": true,
            "positionClass": "toast-bottom-full-width",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "0",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        if ('@TempData["success"]' != '') {
            toastr.success('@TempData["success"]');

        }
        else if ('@TempData["error"]' != '') {
            toastr.error('@TempData["error"]'.split('|')[0]);
            console.log('@TempData["error"]'.split('|')[1]);
        }
        @{TempData["success"] = TempData["error"] = "";}

        $(".numbers-only").keypress(function (e) {
            if (e.which == 8 || (e.which == 46 && $(this).val().indexOf('.') == -1) || (e.which > 47 && e.which < 58)) { } else { return false; }
        });

        $("#GRNDate").datepicker({
            dateFormat: "dd MM yy"
        });
        $("#GRNNo").tooltip();
        calculateSummary();
        calculateGrandTotal();
    });

    function ValueChanged(row) {
        var quantity = $("#Items_" + row + "__AcceptedQuantity").val();
        var rate = $("#Items_" + row + "__Rate").val();
        var discount = $("#Items_" + row + "__Discount").val();

        if (quantity == NaN) quantity = 0;
        if (rate == NaN) rate = 0;
        if (discount == NaN) discount = 0;

        var amount = ((quantity * rate) - discount).toFixed(2);
        $("#Items_" + row + "__Amount").val(amount);
        calculateSummary();
        calculateGrandTotal();

        var received = Number($("#Items_" + row + "__ReceivedQuantity").val());
        var accepted = Number($("#Items_" + row + "__AcceptedQuantity").val());
        if (isNaN(received)) received = 0;
        if (isNaN(accepted)) accepted = 0;
        var rejected = received - accepted;
        $("#Items_" + row + "__RejectedQuantity").val(rejected);
    }

    function ValidateRow(index) {
        var pending = Number($("#Items_" + index + "__PendingQuantity").val());
        var received = Number($("#Items_" + index + "__ReceivedQuantity").val());
        var accepted = Number($("#Items_" + index + "__AcceptedQuantity").val());
        if (accepted > received) { accepted = received; $("#Items_" + index + "__AcceptedQuantity").val(received); ValueChanged(index); }
        if (received > pending) {
            toastr.info("Recieved quantity cannot be more than pending quantity");
            $("#Items_" + index + "__ReceivedQuantity").val(pending);
            ValueChanged(index);
        }
        else if (accepted > received) {
            toastr.info("Accepted quantity cannot be more than received quantity");
            $("#Items_" + index + "__AcceptedQuantity").val(received);
            ValueChanged(index);
        }
    }

    function calculateSummary() {
        var amount = parseFloat("0.00");
        var grand = parseFloat("0.00");

        $('.clAmount').each(function (i, obj) {
            var a = parseFloat($(obj).val());
            if (isNaN(a)) {
                a = Number("0.00");
            }
            amount = (amount + a);
            $("#QtyAmount").text(amount.toFixed(2));
        });

    }

    function calculateGrandTotal() {
        var total = Number($("#QtyAmount").text());
        var addition = isNaN(Number($("#Addition").val())) ? 0 : Number($("#Addition").val());
        var deduction = isNaN(Number($("#Deduction").val())) ? 0 : Number($("#Deduction").val());
        var grandTotal = (total + addition) - deduction;
        $("#grandTotal").val(grandTotal.toFixed(2));
    }

    function Exit() {
        var isDirectPurchase = '@Model.isDirectPurchaseGRN';
        if (isDirectPurchase != 'True')
            var url = '@Url.Action("PendingGrnWareHouse")';
        else url = '@Url.Action("PendingDirectPurchase")';
        location.href = url;
    }

    function formValidation() {
        if (Number($("#QtyAmount").text()) < 0) {
            toastr.info("Total amount cannot be less than zero");
            return false;
        }
        else if (Number($("#grandTotal").val()) < 0) {
            toastr.info("Grand total cannot be less than zero");
            return false;
        }
        else return true;
    }

    function Delete(id) {
        var url = '@Url.Action("Delete")';
        url += "/" + id
        window.location = url;
    }

</script>


    <div class="row">
        <div class="form-head1">
            <h4>GRN</h4>
        </div>

        <div class="main-part pad1">

            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "createFrom", @id = "grn_form", @onsubmit = "return formValidation()" }))
            {
                @Html.HiddenFor(m => m.isDirectPurchaseGRN)
                @Html.HiddenFor(m => m.SupplyOrderId, new { @class = "form_input", autocomplete = "off" })

                <div class="row form-group">
                    <div class="col-md-2">
                        <label for="GRNNo">GRN No. </label>
                        @Html.TextBoxFor(m => m.GRNNo, new { @class = "form_input", autocomplete = "off", @required = "true", @readonly = "true", @title = "This number may change after saving" })
                    </div>
                    <div class="col-md-2">
                        <label for="GRNDate">Date</label>
                        @Html.TextBoxFor(m => m.GRNDate, Model.GRNDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @required = "true" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-4">
                        <label for="SupplierId">Supplier</label>
                        @{
                if (Model.isDirectPurchaseGRN)
                {
                    @Html.DropDownListFor(m => m.SupplierId, (SelectList)ViewBag.supplierList, "Select Supplier", new { @class = "form_input ", autocomplete = "off", @required = "true" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.Supplier, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                            @Html.HiddenFor(m => m.SupplierId, new { @class = "form_input", autocomplete = "off", @required = "true" })
                }
                        }
                    </div>
                </div>
    <div class="table-responsive">
        <div class="tab_logic">
            <table class="table table-bordered" id="tab_logic">
                <thead>
                    <tr class="grid_heading">
                        <th width="20%" style="vertical-align:middle"><h1>Material/Spares</h1></th>
                        <th width="10%" style="vertical-align:middle"><h1>Part No.</h1></th>
                        <th width="25%" style="vertical-align:middle"><h1>Remarks</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Pending Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Received Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Accepted Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Rejected Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>UoM</h1></th>
                        <th width="7%" class="text-right" style="vertical-align:middle"><h1>Rate</h1></th>
                        <th width="6%" class="text-right" style="vertical-align:middle"><h1>Discount</h1></th>
                        <th width="7%" class="text-right" style="vertical-align:middle"><h1>Amount</h1></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Items.Count; i++)
                            {
                            <tr>
                                <td>
                                    @{
                                if (Model.isDirectPurchaseGRN)
                                {
                                        @Html.HiddenFor(m => m.Items[i].DirectPurchaseRequestItemId)
                                }
                                else
                                {
                                        @Html.HiddenFor(m => m.Items[i].SupplyOrderItemId)
                                }
                                    }

                                    @Html.HiddenFor(m => m.Items[i].SlNo)
                                    @Html.TextBoxFor(m => m.Items[i].ItemName, new { @class = "form_input", autocomplete = "off", placeholder = "Material/Spares", @disabled = "true" })
                                </td>
                                <td>
                                    @Html.HiddenFor(m => m.Items[i].ItemId)
                                    @Html.TextBoxFor(m => m.Items[i].PartNo, new { @class = "form_input", autocomplete = "off", placeholder = "Part No.", @disabled = "true" })
                                </td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Remarks, new { @class = "form_input", autocomplete = "off", placeholder = "Remarks" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].PendingQuantity, new { @class = "form_input", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].ReceivedQuantity, new { @class = "form_input clQuantity numbers-only", @style = "text-align:right", autocomplete = "off", placeholder = "Qty", @onkeyup = "ValueChanged(" + i + ");", @onchange = "ValidateRow(" + i + ")", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].AcceptedQuantity, new { @class = "form_input clQuantity numbers-only", @style = "text-align:right", autocomplete = "off", placeholder = "Qty", @onkeyup = "ValueChanged(" + i + ");", @onchange = "ValidateRow(" + i + ")", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].RejectedQuantity, new { @class = "form_input", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Unit, new { @class = "form_input ", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Rate, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "ValueChanged(" + i + ");", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Discount, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "ValueChanged(" + i + ");", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Amount, new { @class = "form_input clAmount", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                            </tr>
                            }

                </tbody>
                <tfoot>
                    <tr class="grid_heading">

                        <th width="20%" class="text-center"><h1></h1></th>
                        <th width="10%" class="text-center"><h1></h1></th>
                        <th width="25%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle">
                            <h1>
                                Total
                            </h1>
                        </th>
                        <th width="5%" class="text-right" style="vertical-align:middle">
                            <h1>
                                @*@Html.DropDownListFor(m => m.CurrencyId, new SelectList(ViewBag.currlist, "Value", "Text", Model.CurrencyId), "Select Currency", new { @class = "form_input", autocomplete = "off", @required = "true" })*@
                                @Html.HiddenFor(m => m.CurrencyId)
                                @Html.TextBoxFor(m => m.CurrencyName, new { @class = "form_input", @readonly = "true" })
                            </h1>
                        </th>
                        <th width="5%" class="text-right"><span id="QtyAmount"></span></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
                <div class="row form-group">
                                <div class="col-md-12">
                                    <div class="part1">
                                        <label for="SpecialRemarks">Special Remarks</label>
                                        @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h", autocomplete = "off" })
                                    </div>
                            </div>

                </div>

                <div class="row form-group">
                    <div class="col-md-3">
                        <label for="StockPointId">WareHouse/Location</label>
                        @Html.DropDownListFor(m => Model.StockPointId, (SelectList)ViewBag.WarehouseList, "Select WareHouse", new { @class = "form_input", autocomplete = "off", @required = "true" })
                    </div>
                    <div class="col-md-3">
                        <label for="SupplierDCNoAndDate">Supplier DC No. & Date</label>
                        @Html.TextBoxFor(m => m.SupplierDCNoAndDate, new { @class = "form_input", autocomplete = "off" })
                    </div>
                    <div class="col-md-2">
                        <label for="ReceivedBy">Received By</label>
                        @Html.DropDownListFor(m => m.ReceivedBy, (SelectList)ViewBag.employeeList, "Select Employee", new { @class = "form_input", autocomplete = "off", @required = "true" })
                    </div>
                    <div class="col-md-2">
                        <label for="VehicleNo">Vehicle No.</label>
                        @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form_input", autocomplete = "off" })
                    </div>
                    <div class="col-md-2">
                        <label for="GatePassNo">Gate Pass No.</label>
                        @Html.TextBoxFor(m => m.GatePassNo, new { @class = "form_input", autocomplete = "off" })
                    </div>

                </div>

                <div class="row form-group">
                    <div class="col-md-5 col-sm-10 col-xs-8">
                        <label for="AdditionId">Addition</label>
                        @Html.DropDownListFor(m => Model.AdditionId, (SelectList)ViewBag.additionList, "Select addition", new { @class = "form_input" })
                    </div>
                    <div class="col-md-1 col-xs-4 col-sm-2">
                        <label for="Addition">Add.Amt.</label>
                        @Html.TextBoxFor(m => Model.Addition, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "calculateGrandTotal()" })
                    </div>
                    <div class="col-md-5 col-sm-10 col-xs-8">
                        <label for="DeductionId">Deduction</label>
                        @Html.DropDownListFor(m => Model.DeductionId, (SelectList)ViewBag.deductionList, "Select deduction", new { @class = "form_input" })
                    </div>
                    <div class="col-md-1 col-xs-4 col-sm-2">
                        <label for="Deduction">Ded.Amt.</label>
                        @Html.TextBoxFor(m => Model.Deduction, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "calculateGrandTotal()" })
                    </div>
                </div>


                <div class="row form-group">
                    <div class="col-md-11"></div>
                    <div class="col-sm-offset-10 col-sm-2 col-md-push-1 col-md-1">
                        <label>Net Amt.</label>
                        <input type="text" id="grandTotal" class="form_input text-right bold" style="font-size:16px;padding:10px" disabled />
                    </div>
                </div>

                <div class="row">

                    <div class="col-md-12 hrpart">
                        <button type="button" class="form-button right" onclick="Exit()">Exit</button>
                        <button type="submit" class="form-button right">Edit</button>
                        <button type="button" class="form-button left" onclick="Delete('@Model.GRNId')">Delete</button>
                    </div>

                </div>


            }
        </div>
    </div>

