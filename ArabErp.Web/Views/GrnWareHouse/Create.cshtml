@model  ArabErp.Domain.GRN
@{
    ViewBag.Title = "Create";
   Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        toastr.options = {
            "closeButton": true,
            "positionClass": "toast-bottom-full-width",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "0",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        if ('@TempData["success"]' != '') {
            toastr.success('@TempData["success"]');

        }
        else if ('@TempData["error"]' != '') {
            toastr.error('@TempData["error"]'.split('|')[0]);
            console.log('@TempData["error"]'.split('|')[1]);
        }
        @{TempData["success"] = TempData["error"] = "";}

        $(".numbers-only").keypress(function (e) {
            if (e.which == 8 || (e.which == 46 && $(this).val().indexOf('.') == -1) || (e.which > 47 && e.which < 58)) { } else { return false; }
        });

        $("#GRNDate").datepicker({
            dateFormat: "dd MM yy"
        });
        $("#GRNNo").tooltip();
        calculateSummary();
        calculateGrandTotal();
    });

    function AdditionAmount (row)
    {
        var addamt = $("#Additions_" + row + "__Addition").val();
        if (addamt == NaN) addamt = 0;
        $("#Additions_" + row + "__Addition").val(addamt);
        calculateSummary();
        calculateGrandTotal();
    }

    function DeductionAmount(row) {
        var dedamt = $("#Deductions_" + row + "__Deduction").val();
        if (dedamt == NaN) dedamt = 0;
        $("#Deductions_" + row + "__Deduction").val(dedamt);
        calculateSummary();
        calculateGrandTotal();
    }

    function ValueChanged(row) {
        var quantity = $("#Items_" + row + "__AcceptedQuantity").val();
        var rate = $("#Items_" + row + "__Rate").val();
        var discount = $("#Items_" + row + "__Discount").val();

        if (quantity == NaN) quantity = 0;
        if (rate == NaN) rate = 0;
        if (discount == NaN) discount = 0;

        var amount = ((quantity * rate) - discount).toFixed(2);
        $("#Items_" + row + "__Amount").val(amount);
        calculateSummary();
        calculateGrandTotal();

        var received = Number($("#Items_" + row + "__ReceivedQuantity").val());
        var accepted = Number($("#Items_" + row + "__AcceptedQuantity").val());
        if (isNaN(received)) received = 0;
        if (isNaN(accepted)) accepted = 0;
        var rejected = received - accepted;
        $("#Items_" + row + "__RejectedQuantity").val(rejected);
    }

    function ValidateRow(index) {
        var pending = Number($("#Items_" + index + "__PendingQuantity").val());
        var received = Number($("#Items_" + index + "__ReceivedQuantity").val());
        var accepted = Number($("#Items_" + index + "__AcceptedQuantity").val());
        if (accepted > received) { accepted = received; $("#Items_" + index + "__AcceptedQuantity").val(received); ValueChanged(index); }
        if (received > pending) {
            toastr.info("Recieved quantity cannot be more than pending quantity");
            $("#Items_" + index + "__ReceivedQuantity").val(pending);
            ValueChanged(index);
        }
        else if (accepted > received) {
            toastr.info("Accepted quantity cannot be more than received quantity");
            $("#Items_" + index + "__AcceptedQuantity").val(received);
            ValueChanged(index);
        }
    }

    function calculateSummary() {
        var amount = parseFloat("0.00");
        var grand = parseFloat("0.00");
        var aamt = parseFloat("0.00");
        var damt = parseFloat("0.00");

        $('.claddamt').each(function (i, obj) {
            var b = parseFloat($(obj).val());
            if (isNaN(b)) {
                b = Number("0.00");
            }
            aamt = (aamt + b);
            $("#AdditionalAmt").val(aamt.toFixed(2));
        });

        $('.cldedamt').each(function (i, obj) {
            var c = parseFloat($(obj).val());
            if (isNaN(c)) {
                c = Number("0.00");
            }
            damt = (damt + c);
            $("#DeductionAmt").val(damt.toFixed(2));
        });

        $('.clAmount').each(function (i, obj) {
            var a = parseFloat($(obj).val());
            if (isNaN(a)) {
                a = Number("0.00");
            }
            amount = (amount + a);
            $("#QtyAmount").text(amount.toFixed(2));
        });

    }

    function calculateGrandTotal() {
        var total = Number($("#QtyAmount").text());
        var addition = Number($("#AdditionalAmt").val());
        var deduction = Number($("#DeductionAmt").val());
        //var addition = isNaN(Number($("#Addition").val())) ? 0 : Number($("#Addition").val());
        //var deduction = isNaN(Number($("#Deduction").val())) ? 0 : Number($("#Deduction").val());
        var grandTotal = (total + addition) - deduction;
        //var additionalamt = Number($("#AdditionalAmt").text());
       
        $("#TotalAmt").val(total.toFixed(2));
        $("#grandTotal").val(grandTotal.toFixed(2));
    }

    function Exit() {
        var isDirectPurchase = '@Model.isDirectPurchaseGRN';
        if (isDirectPurchase != 'True')
            var url = '@Url.Action("PendingGrnWareHouse")';
        else url = '@Url.Action("PendingDirectPurchase")';
        location.href = url;
    }

    function formValidation() {
        if (Number($("#QtyAmount").text()) < 0) {
            toastr.info("Total amount cannot be less than zero");
            return false;
        }
        else if (Number($("#grandTotal").val()) < 0) {
            toastr.info("Grand total cannot be less than zero");
            return false;
        }
        else return true;
    }

    function OnSupplierChanged(sender) {
        var id = $(sender).val();
        if (id == '') {
            $("#CurrencyId").val('');
            $("#CurrencyName").val('');
            return;
        }
        var url = '@Url.Action("GetSupplierCurrency")';
        $.getJSON(url, { id: $(sender).val() }, function(data){
            $("#CurrencyId").val(data.currencyId);
            $("#CurrencyName").val(data.currencyName);
        });
    }

    function AdditionAdd() {

        var i = 0;
        var no = 1;
        $('input[id^="Row_Item_Id_"]').each(function () {
            var id = this.id;
            no++;
            var row = Number(id.replace("Row_Item_Id_", ""));
            if (row > i) {
                i = row;
            }
        });
        i++;

        var index = (new Date()).getTime(); // unique indexer
        var clone = $('#Row_Item_Id_0').clone(); // clone the BatchProducts item
        //Update the index of the clone
        clone.html($(clone).html().replace(/Additions_0__/g, 'Additions_' + i + '__'));
        clone.html($(clone).html().replace(/\Additions[0]./g, 'Additions[' + i + '].'));
        clone.html($(clone).html().replace(/\[0\]/g, '[' + i + ']'));
        clone.html($(clone).html().replace(/\(0\)/g, '(' + i + ')'));
        clone.html($(clone).html().replace(/Additions_0_/, 'Row_Item_' + i + ''));
        //clone.html($(clone).html().replace(/Itemslno1/, 'Itemslno' + (i + 1) + ''));
        //clone.html($(clone).html().replace("OnMaterialChange(this," + i, "OnMaterialChange(this," + (i + 1)));
        clone.html($(clone).html().replace(/this,0/, 'this,' + i + ''));
        $("#tab_Add").append('<tr id="'+'Row_Item_Id_' + i + '">' + clone.html() + '  </tr>');
    }
    
    function AdditionDelete(index) {
    
        var i = 0;
        var no = 1;
        $('input[id^="Row_Item_"]').each(function () {
            var id = this.id;
            no++;
            var row = Number(id.replace("Row_Item_", ""));
            if (row > i) {
                i = row;
            }
        });
        i++;
        //alert(i);
        //$("#" + index).html('');
        if (i = 1) {
            $("#Row_Item_Id_" + index).remove();
            for (var j = index + 1; j < i; j++) {
                var ItemId = $("#Additions_" + j + "__AdditionId").val();
                var Quantity = $("#Additions_" + j + "__Addition").val();
                var clone = $("#Row_Item_Id_" + j).clone(true, true);
                clone.html($(clone).html().replace(new RegExp("Additions_" + j + "__", "g"), 'Additions_' + (j - 1) + '__'));
                clone.html($(clone).html().replace(new RegExp("\\[" + j + "].", "g"), "[" + (j - 1) + "]."));
                clone.html($(clone).html().replace("AdditionDelete(" + j, "AdditionDelete(" + (j - 1)));
                //clone.html($(clone).html().replace("OnMaterialChange(this," + j, "OnMaterialChange(this," + (j - 1)));
                clone.html($(clone).html().replace("Row_Item_Id_" + j, "Row_Item_Id_" + (j - 1)));
                clone.html($(clone).html().replace("Row_Item_" + j, "Row_Item_" + (j - 1)));
                clone.html($(clone).html().replace("this," + j, "this," + (j - 1)));
                $("#Row_Item_Id_" + j).html(clone.html());
                $("#Additions_" + (j - 1) + "__AdditionId").val(ItemId);
                $("#Additions_" + (j - 1) + "__Addition").val(Quantity);
           }
        }
    }

    function DeductionAdd() {

        var i = 0;
        var no = 1;
        $('input[id^="Row_Ded_Id_"]').each(function () {
            var id = this.id;
            no++;
            var row = Number(id.replace("Row_Ded_Id_", ""));
            if (row > i) {
                i = row;
            }
        });
        i++;

        var index = (new Date()).getTime(); // unique indexer
        var clone = $('#Row_Ded_Id_0').clone(); // clone the BatchProducts item
        //Update the index of the clone
        clone.html($(clone).html().replace(/Deductions_0__/g, 'Deductions_' + i + '__'));
        clone.html($(clone).html().replace(/\Deductions[0]./g, 'Deductions[' + i + '].'));
        clone.html($(clone).html().replace(/\[0\]/g, '[' + i + ']'));
        clone.html($(clone).html().replace(/\(0\)/g, '(' + i + ')'));
        clone.html($(clone).html().replace(/Deductions_0_/, 'Row_Item_' + i + ''));
        //clone.html($(clone).html().replace(/Itemslno1/, 'Itemslno' + (i + 1) + ''));
        //clone.html($(clone).html().replace("OnMaterialChange(this," + i, "OnMaterialChange(this," + (i + 1)));
        clone.html($(clone).html().replace(/this,0/, 'this,' + i + ''));
        $("#tab_Ded").append('<tr id="' + 'Row_Ded_Id_' + i + '">' + clone.html() + '  </tr>');
    }

    function DeductionDelete(index) {

        var i = 0;
        var no = 1;
        $('input[id^="Row_Ded_"]').each(function () {
            var id = this.id;
            no++;
            var row = Number(id.replace("Row_Ded_", ""));
            if (row > i) {
                i = row;
            }
        });
        i++;
        //alert(i);
        //$("#" + index).html('');
        if (i = 1) {
            $("#Row_Ded_Id_" + index).remove();
            for (var j = index + 1; j < i; j++) {
                var ItemId = $("#Deductions_" + j + "__DeductionId").val();
                var Quantity = $("#Deductions_" + j + "__Deduction").val();
                var clone = $("#Row_Ded_Id_" + j).clone(true, true);
                clone.html($(clone).html().replace(new RegExp("Deductions_" + j + "__", "g"), 'Deductions_' + (j - 1) + '__'));
                clone.html($(clone).html().replace(new RegExp("\\[" + j + "].", "g"), "[" + (j - 1) + "]."));
                clone.html($(clone).html().replace("DeductionDelete(" + j, "DeductionDelete(" + (j - 1)));
                //clone.html($(clone).html().replace("OnMaterialChange(this," + j, "OnMaterialChange(this," + (j - 1)));
                clone.html($(clone).html().replace("Row_Ded_Id_" + j, "Row_Ded_Id_" + (j - 1)));
                clone.html($(clone).html().replace("Row_Ded_" + j, "Row_Ded_" + (j - 1)));
                clone.html($(clone).html().replace("this," + j, "this," + (j - 1)));
                $("#Row_Ded_Id_" + j).html(clone.html());
                $("#Deductions_" + (j - 1) + "__DeductionId").val(ItemId);
                $("#Deductions_" + (j - 1) + "__Deduction").val(Quantity);
            }
        }
    }

</script>


    <div class="row">
        <div class="form-head1">
            <h4>GRN</h4>
        </div>

        <div class="main-part pad1">

            @using (Html.BeginForm("Save", null, FormMethod.Post, new { @class = "createFrom", @id = "grn_form", @onsubmit = "return formValidation()" }))
            {
                @Html.HiddenFor(m => m.isDirectPurchaseGRN)
                @Html.HiddenFor(m => m.SupplyOrderId, new { @class = "form_input", autocomplete = "off" })

                <div class="row form-group">
                    <div class="col-md-2">
                        <label for="GRNNo">GRN No. </label>
                        @Html.TextBoxFor(m => m.GRNNo, new { @class = "form_input", autocomplete = "off", @required = "true", @readonly = "true", @title = "This number may change after saving" })
                    </div>
                    <div class="col-md-2">
                        <label for="GRNDate">Date</label>
                        @Html.TextBoxFor(m => m.GRNDate, Model.GRNDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @required = "true" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-4">
                        <label for="SupplierId">Supplier</label>
                        @{
                if (Model.isDirectPurchaseGRN)
                {
                    @Html.DropDownListFor(m => m.SupplierId, (SelectList)ViewBag.supplierList, "Select Supplier", new { @class = "form_input ", autocomplete = "off", @required = "true", @onchange = "OnSupplierChanged(this)" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.Supplier, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                            @Html.HiddenFor(m => m.SupplierId, new { @class = "form_input", autocomplete = "off", @required = "true" })
                }
                        }
                    </div>
                </div>
    <div class="table-responsive">
        <div class="tab_logic">
            <table class="table table-bordered" id="tab_logic">
                <thead>
                    <tr class="grid_heading">
                        <th width="20%" style="vertical-align:middle"><h1>Material/Spares</h1></th>
                        <th width="10%" style="vertical-align:middle"><h1>Part No.</h1></th>
                        <th width="25%" style="vertical-align:middle"><h1>Remarks</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Pending Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Received Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Accepted Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>Rejected Qty.</h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle"><h1>UoM</h1></th>
                        <th width="7%" class="text-right" style="vertical-align:middle"><h1>Rate</h1></th>
                        <th width="6%" class="text-right" style="vertical-align:middle"><h1>Discount</h1></th>
                        <th width="7%" class="text-right" style="vertical-align:middle"><h1>Amount</h1></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Items.Count; i++)
                            {
                            <tr>
                                <td>
                                    @{
                                if (Model.isDirectPurchaseGRN)
                                {
                                        @Html.HiddenFor(m => m.Items[i].DirectPurchaseRequestItemId)
                                }
                                else
                                {
                                        @Html.HiddenFor(m => m.Items[i].SupplyOrderItemId)
                                }
                                    }

                                    @Html.HiddenFor(m => m.Items[i].SlNo)
                                    @Html.TextBoxFor(m => m.Items[i].ItemName, new { @class = "form_input", autocomplete = "off", placeholder = "Material/Spares", @disabled = "true" })
                                </td>
                                <td>
                                    @Html.HiddenFor(m => m.Items[i].ItemId)
                                    @Html.TextBoxFor(m => m.Items[i].PartNo, new { @class = "form_input", autocomplete = "off", placeholder = "Part No.", @disabled = "true" })
                                </td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Remarks, new { @class = "form_input", autocomplete = "off", placeholder = "Remarks" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].PendingQuantity, new { @class = "form_input", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].ReceivedQuantity, new { @class = "form_input clQuantity numbers-only", @style = "text-align:right", autocomplete = "off", placeholder = "Qty", @onkeyup = "ValueChanged(" + i + ");", @onchange = "ValidateRow(" + i + ")", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].AcceptedQuantity, new { @class = "form_input clQuantity numbers-only", @style = "text-align:right", autocomplete = "off", placeholder = "Qty", @onkeyup = "ValueChanged(" + i + ");", @onchange = "ValidateRow(" + i + ")", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].RejectedQuantity, new { @class = "form_input", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Unit, new { @class = "form_input ", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Rate, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "ValueChanged(" + i + ");", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Discount, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "ValueChanged(" + i + ");", @required = "true" })</td>
                                <td>@Html.TextBoxFor(m => m.Items[i].Amount, new { @class = "form_input clAmount", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                            </tr>
                            }

                </tbody>
                <tfoot>
                    <tr class="grid_heading">

                        <th width="20%" class="text-center"><h1></h1></th>
                        <th width="10%" class="text-center"><h1></h1></th>
                        <th width="25%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-center"><h1></h1></th>
                        <th width="5%" class="text-right" style="vertical-align:middle">
                            <h1>
                                Total
                            </h1>
                        </th>
                        <th width="5%" class="text-right" style="vertical-align:middle">
                            <h1>
                                @*@Html.DropDownListFor(m => m.CurrencyId, new SelectList(ViewBag.currlist, "Value", "Text", Model.CurrencyId), "Select Currency", new { @class = "form_input", autocomplete = "off", @required = "true" })*@
                                @Html.HiddenFor(m => m.CurrencyId)
                                @Html.TextBoxFor(m => m.CurrencyName, new { @class = "form_input", @readonly = "true", @placeholder = "Currency" })
                            </h1>
                        </th>
                        <th width="5%" class="text-right"><span id="QtyAmount"></span></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

                <div class="row">
                    <div class="main-grid main-grid-top ">
                        <ul style="visibility: visible;" class="nav nav-tabs test2">
                            <li class="active"><a data-toggle="tab" href="#home" aria-expanded="false">Summary</a></li>
                            <li class=""><a data-toggle="tab" href="#menu1" aria-expanded="false">Addition</a></li>
                            <li class=""><a data-toggle="tab" href="#menu2" aria-expanded="false">Deduction</a></li>
                        </ul>
                        <div class="tab-content">
                            <div id="home" class="tab-pane fade active in">
                                <h5>Summary</h5>
                                <div class="table-responsive">
                                    <div class="tab_logic">
                                      

                                            <div class="row form-group">
                                                <div class="col-md-12">
                                                    @*<div class="part1">*@
                                                        <label for="SpecialRemarks">Special Remarks</label>
                                                        @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h form_input bluebox", autocomplete = "off" })
                                                    @*</div>*@
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-3">
                                                    <label for="StockPointId">WareHouse/Location</label>
                                                    @Html.DropDownListFor(m => Model.StockPointId, (SelectList)ViewBag.WarehouseList, "Select WareHouse", new { @class = "form_input form_input bluebox", autocomplete = "off", @required = "true" })
                                                </div>
                                                <div class="col-md-3">
                                                    <label for="SupplierDCNoAndDate">Supplier DC No. & Date</label>
                                                    @Html.TextBoxFor(m => m.SupplierDCNoAndDate, new { @class = "form_input form_input bluebox", autocomplete = "off" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label for="ReceivedBy">Received By</label>
                                                    @Html.DropDownListFor(m => m.ReceivedBy, (SelectList)ViewBag.employeeList, "Select Employee", new { @class = "form_input form_input bluebox", autocomplete = "off", @required = "true" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label for="VehicleNo">Vehicle No.</label>
                                                    @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form_input form_input bluebox", autocomplete = "off" })
                                                </div>
                                                <div class="col-md-2">
                                                    <label for="GatePassNo">Gate Pass No.</label>
                                                    @Html.TextBoxFor(m => m.GatePassNo, new { @class = "form_input form_input bluebox", autocomplete = "off" })
                                                </div>

                                            </div>
                                          
                                        <div class="row form-group">
                                            <div class="col-md-3">
                                                <label>Total Additonal Amt.</label>
                                                <input type="text" id="AdditionalAmt" class="form_input text-right bold " style="font-size:16px;padding:10px" disabled />
                                            </div>

                                            <div class="col-md-3">
                                                <label>Total Deduction Amt.</label>
                                                <input type="text" id="DeductionAmt" class="form_input text-right bold " style="font-size:16px;padding:10px" disabled />
                                            </div>

                                            <div class="col-md-3">
                                                <label>Total Amt.</label>
                                                <input type="text" id="TotalAmt" class="form_input text-right bold " style="font-size:16px;padding:10px" disabled />
                                            </div>

                                                @*<div class="col-md-11"></div>*@
                                                @*<div class="col-sm-offset-10 col-sm-2 col-md-push-1 col-md-1">*@
                                            <div class="col-md-1">
                                                <label>Net Amt.</label>
                                                <input type="text" id="grandTotal" class="form_input text-right bold " style="font-size:16px;padding:10px" disabled />
                                            </div>
                                            </div>

                                        
                                    </div>
                                </div>
                            </div>
                            <div id="menu1" class="tab-pane fade">
                                <h5>Addition</h5>
                                <div class="table-responsive">
                                    <div class="tab_logic">
                                        <table class="table table-bordered" id="tab_Add">
                                            <thead>
                                                <tr class="grid_heading">
                                                    <th width="2%"></th>
                                                    <th style="width:90%;">Addition</th>
                                                    <th style="width:15%;">Amount</th>
                                                    <th width="2%">&nbsp;</th>
                                                    @*<th></th>*@
                                                </tr>
                                            </thead>

                                            <tbody>
                                                @for (int i = 0; i < Model.Additions.Count; i++)
                                                     {
                                                     <tr id="Row_Item_Id_@i">
                                                        <td 
                                                           style="vertical-align:middle"><a class="glyphicon glyphicon-minus" style="top:0px" onclick="AdditionDelete(@i)"></a>
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(m => m.Additions[i].GRNId)
                                                            <input type="hidden" id="Row_@i" />
                                                            @Html.DropDownListFor(m => @Model.Additions[i].AdditionId, new SelectList(ViewBag.additionList, "Value", "Text", @Model.Additions[i].AdditionId), "Select addition", new { @class = "form_input"})
                                                        </td>
                                                        <td>
                                                           @Html.TextBoxFor(m => @Model.Additions[i].Addition, new { @class = "form_input numbers-only claddamt", @style = "text-align:right", autocomplete = "off", @Value = "0.00", @onkeyup = "AdditionAmount(" + i + ");" })
                                                        </td>
                                                         <td style="vertical-align:middle"><a class="glyphicon glyphicon-plus" style="top:0px" onclick="AdditionAdd(@i)"></a></td>
                                                    </tr>
                                                     }
                                            </tbody>

                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div id="menu2" class="tab-pane fade">
                                <h5>Deduction</h5>
                                <div class="table-responsive">
                                    <div class="tab_logic">
                                        <table class="table table-bordered" id="tab_Ded">
                                            <thead>
                                                <tr class="grid_heading">
                                                    <th width="2%"></th>
                                                    <th style="width:90%;">Deduction</th>
                                                    <th style="width:15%;">Amount</th>
                                                    <th width="2%">&nbsp;</th>
                                                    @*<th></th>*@
                                                </tr>
                                            </thead>

                                            <tbody>
                                                @for (int i = 0; i < Model.Deductions.Count; i++)
                                                {
                                                    <tr id="Row_Ded_Id_@i">
                                                        <td 
                                                            style="vertical-align:middle"><a class="glyphicon glyphicon-minus" style="top:0px" onclick="DeductionDelete(@i)"></a>
                                                        </td>
                                                        <td>
                                                            @Html.HiddenFor(m => m.Deductions[i].GRNId)
                                                            <input type="hidden" id="Row_@i" />
                                                            @Html.DropDownListFor(m => @Model.Deductions[i].DeductionId, new SelectList(ViewBag.deductionList, "Value", "Text", @Model.Deductions[i].DeductionId), "Select Deduction", new { @class = "form_input" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => @Model.Deductions[i].Deduction, new { @class = "form_input numbers-only cldedamt", @style = "text-align:right", autocomplete = "off", @Value = "0.00", @onkeyup = "DeductionAmount(" + i + ");" })
                                                        </td>
                                                        <td style="vertical-align:middle"><a class="glyphicon glyphicon-plus" style="top:0px" onclick="DeductionAdd(@i)"></a></td>
                                                    </tr>
                                                }
                                            </tbody>

                                        </table>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                
                <div class="row">
                    <div class="col-md-12 hrpart">
                        <button type="button" class="form-button right" onclick="Exit()">Exit</button>
                        <button type="submit" class="form-button right">Save</button>
                    </div>
                </div>


            }
        </div>
    </div>

