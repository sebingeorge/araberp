@model  ArabErp.Domain.GRN
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .grid_heading th {
        vertical-align: middle;
    }
</style>

<script>
    $(document).ready(function () {

        $(".numbers-only").keypress(function (e) {
            if (e.which == 8 || (e.which == 46 && $(this).val().indexOf('.') == -1) || (e.which > 47 && e.which < 58)) { } else { return false; }
        });

        $("#GRNDate").datepicker({
            dateFormat: "dd-MM-yy"
        });
        calculateSummary();
        //$('#grn_form').bootstrapValidator({
        //    fields: {
        //        GRNNo: {
        //            validators: {
        //                notEmpty: {
        //                    message: 'Please Enter GRN No.'
        //                }
        //            }
        //        },
        //        StockPointId: {
        //            validators: {
        //                notEmpty: {
        //                    message: 'Please Select WareHouse'
        //                }
        //            }
        //        }
        //    }
        //});
    });

    function ValueChanged(row) {
        var quantity = $("#Items_" + row + "__Quantity").val();
        var rate = $("#Items_" + row + "__Rate").val();
        var discount = $("#Items_" + row + "__Discount").val();

        if (quantity == NaN) quantity = 0;
        if (rate == NaN) rate = 0;
        if (discount == NaN) discount = 0;

        var amount = ((quantity * rate) - discount).toFixed(2);
        $("#Items_" + row + "__Amount").val(amount);
        calculateSummary();

        var pending = Number($("#Items_" + row + "__PendingQuantity").val());
        var received = Number($("#Items_" + row + "__Quantity").val());
        if (isNaN(pending)) pending = 0;
        if (isNaN(received)) received = 0;
        var rejected = pending - received;
        $("#Items_" + row + "__RejectedQuantity").val(rejected.toFixed(2));
    }

    function calculateSummary() {
        //var quantity = parseFloat("0.00");
        var amount = parseFloat("0.00");
        //$('.clQuantity').each(function (i, obj) {
        //    var a = parseFloat($("#Items_" + i + "__Quantity").val()).toFixed(2);

        //    if (isNaN(a)) {
        //        a = parseFloat("0.00");
        //    }

        //    quantity = quantity + a;
        //});

        $('.clAmount').each(function (i, obj) {
            var a = parseFloat($("#Items_" + i + "__Amount").val());
            if (isNaN(a)) {
                a = Number("0.00");
            }
            amount = (amount + a).toFixed(2);
        });
        $("#QtyAmount").text(amount);

        amount = Number(amount) + Number($("#Addition").val()) - Number($("#Deduction").val());
        $("#grandTotal").val(amount.toFixed(2));
    }

    function Exit() {
        location.href = '@Url.Action("PendingGrnWareHouse")';
    }

    function formValidation() {
        //$("input[id$='__RejectedQuantity']").each(function (i, obj) {
        //    if(Number($(this).val()) < 0)
        //        toastr.info("Recieved quantity cannot be greater than pending quantity")
        //});
        return true;
    }

</script>

<div class="container">
    <div class="row">
        <div class="form-head1">
            <h4>GRN</h4>
        </div>

        <div class="main-part pad1">

            @using (Html.BeginForm("Save", null, FormMethod.Post, new { @class = "createFrom", @id = "grn_form", @onsubmit = "return formValidation()" }))
            {
                @Html.HiddenFor(m => m.isDirectPurchaseGRN)
                @Html.HiddenFor(m => m.SupplyOrderId, new { @class = "form_input", autocomplete = "off" })

                <div class="row form-group">
                    <div class="col-md-2">
                        <label for="GRNNo">GRN No. </label>
                        @Html.TextBoxFor(m => m.GRNNo, new { @class = "form_input", autocomplete = "off", @required = "true" })
                    </div>
                    <div class="col-md-2">
                        <label for="GRNDate">Date</label>
                        @Html.TextBoxFor(m => m.GRNDate, Model.GRNDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @required = "true" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-4">
                        <label for="SupplierId">Supplier</label>
                        @{
                if (Model.isDirectPurchaseGRN)
                {
                    @Html.DropDownListFor(m => m.SupplierId, (SelectList)ViewBag.supplierList, "Select Supplier", new { @class = "form_input ", autocomplete = "off", @required = "true" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.Supplier, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                            @Html.HiddenFor(m => m.SupplierId, new { @class = "form_input", autocomplete = "off", @required = "true" })
                }
                        }

                    </div>

                    @*<div class="col-md-4">
                            <label for="SONODATE">SO No. & Date</label>
                             @Html.TextBoxFor(m => m.SONODATE, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                        </div>*@

                </div>

                <div class="tab_logic">

                    <table class="table table-bordered" id="tab_logic">
                        <thead>
                            <tr class="grid_heading">
                                <th width="20%" style="vertical-align:middle">Material/Spares</th>
                                <th width="10%" style="vertical-align:middle">PartNo</th>
                                <th width="25%" style="vertical-align:middle">Remarks</th>
                                <th width="5%" class="text-right " style="vertical-align:middle">Pending Qty</th>
                                <th width="5%" class="text-right " style="vertical-align:middle">Received Qty</th>
                                <th width="5%" class="text-right " style="vertical-align:middle">Rejected Qty</th>
                                <th width="5%" class="text-right " style="vertical-align:middle">Unit</th>
                                <th width="5%" class="text-right " style="vertical-align:middle">Rate</th>
                                <th width="5%" class="text-right " style="vertical-align:middle">Discount</th>
                                <th width="5%" class="text-right " style="vertical-align:middle">Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Items.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @{
                                if (Model.isDirectPurchaseGRN)
                                {
                                    @Html.HiddenFor(m => m.Items[i].DirectPurchaseRequestItemId)
                                }
                                else
                                {
                                    @Html.HiddenFor(m => m.Items[i].SupplyOrderItemId)
                                }
                                        }

                                        @Html.HiddenFor(m => m.Items[i].SlNo)
                                        @Html.TextBoxFor(m => m.Items[i].ItemName, new { @class = "form_input", autocomplete = "off", placeholder = "Material/Spares", @disabled = "true" })
                                    </td>
                                    <td>
                                        @Html.HiddenFor(m => m.Items[i].ItemId)
                                        @Html.TextBoxFor(m => m.Items[i].PartNo, new { @class = "form_input", autocomplete = "off", placeholder = "Part No.", @disabled = "true" })
                                    </td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].Remarks, new { @class = "form_input", autocomplete = "off", placeholder = "Remarks" })</td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].PendingQuantity, new { @class = "form_input", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].Quantity, new { @class = "form_input clQuantity numbers-only", @style = "text-align:right", autocomplete = "off", placeholder = "Qty", @onkeyup = "ValueChanged(" + i + ");", @required = "true" })</td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].RejectedQuantity, new { @class = "form_input", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].Unit, new { @class = "form_input ", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].Rate, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "ValueChanged(" + i + ");", @required = "true" })</td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].Discount, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @onkeyup = "ValueChanged(" + i + ");", @required = "true" })</td>
                                    <td>@Html.TextBoxFor(m => m.Items[i].Amount, new { @class = "form_input clAmount", @style = "text-align:right", autocomplete = "off", @disabled = "true" })</td>
                                </tr>
                            }

                        </tbody>
                        <tfoot>
                            <tr class="grid_heading">

                                <th width="20%" class="text-center"><h1></h1></th>
                                <th width="10%" class="text-center"><h1></h1></th>
                                <th width="25%" class="text-center"><h1></h1></th>
                                <th width="5%" class="text-center"><h1></h1></th>
                                <th width="5%" class="text-center"><h1></h1></th>
                                <th width="5%" class="text-center"><h1></h1></th>
                                <th width="5%" class="text-center"><h1></h1></th>
                                <th width="5%" class="text-right" style="vertical-align:middle">
                                    <h1>
                                        Total
                                    </h1>
                                </th>
                                <th width="5%" class="text-right" style="vertical-align:middle">
                                    <h1>
                                        @Html.DropDownListFor(m => m.CurrencyId, (SelectList)ViewBag.currlist, "Select Currency", new { @class = "form_input", autocomplete = "off", @required = "true" })
                                    </h1>
                                </th>
                                <th width="5%" class="text-right"><span id="QtyAmount"></span></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>

                <div class="row form-group">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="part">
                                <div class="col-md-1"><label for="SpecialRemarks">Spl.Remarks</label></div>
                                <div class="col-md-11">
                                    @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h", autocomplete = "off" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-md-4">
                        <label for="StockPointId">WareHouse/Location</label>
                        @Html.DropDownListFor(m => Model.StockPointId, (SelectList)ViewBag.WarehouseList, "Select WareHouse", new { @class = "form_input", autocomplete = "off", @required = "true" })
                    </div>
                    <div class="col-md-4">
                        <label for="SupplierDCNoAndDate">Supplier DC No. & Date</label>
                        @Html.TextBoxFor(m => m.SupplierDCNoAndDate, new { @class = "form_input", autocomplete = "off" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-md-8">
                        <label for="AdditionRemarks">Addition Remarks</label>
                        @Html.TextBoxFor(m => m.AdditionRemarks, new { @class = "form_input", autocomplete = "off" })
                    </div>
                    <div class="col-md-4">
                        <label for="Addition">Addition</label>
                        @Html.TextBoxFor(m => m.Addition, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @Value = "0.00", @onkeyup = "calculateSummary()" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-md-8">
                        <label for="DeductionRemarks">Deduction Remarks</label>
                        @Html.TextBoxFor(m => m.DeductionRemarks, new { @class = "form_input", autocomplete = "off" })
                    </div>
                    <div class="col-md-4">
                        <label for="Deduction">Deduction</label>
                        @Html.TextBoxFor(m => m.Deduction, new { @class = "form_input numbers-only", @style = "text-align:right", autocomplete = "off", @Value = "0.00", @onkeyup = "calculateSummary()" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-md-offset-9 col-md-1 text-right">
                        <label>Grand Total</label>
                    </div>
                    <div class="col-md-2">
                        <input type="text" id="grandTotal" class="form_input text-right bold" style="font-size:16px;padding:10px" disabled />
                    </div>
                </div>

                <div class="row">

                    <div class="col-md-12 hrpart">
                        <button type="button" class="form-button right" onclick="Exit()">Exit</button>
                        <button type="submit" class="form-button right">Save</button>

                    </div>

                </div>


            }
        </div>
    </div>
</div>
