@using ArabErp.Domain
@model SupplyOrder
@{
    ViewBag.Title = "Supply Order / LPO";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(document).ready(function () {

        calculateSummary();
        //$("#SupplyOrderNo").tooltip();
    });

    function ValidateRow(index) {
        var pending = Number($("#SupplyOrderItems_" + index + "__BalQty").val());
        var ordered = Number($("#SupplyOrderItems_" + index + "__OrderedQty").val());
        if (ordered > pending) {
            toastr.info("Ordered quantity cannot be more than pending quantity");
            $("#SupplyOrderItems_" + index + "__OrderedQty").val(pending);
            QuantityChanged(index);
        }
    }

    function QuantityChanged(row) {
        var quantity = $("#SupplyOrderItems_" + row + "__OrderedQty").val();
        var rate = $("#SupplyOrderItems_" + row + "__Rate").val();
        var discount = $("#SupplyOrderItems_" + row + "__Discount").val();

        if (quantity == NaN) {
            quantity = 0;
        }
        if (rate == NaN) {
            rate = 0;
        }
        if (discount == NaN) {
            discount = 0;
        }
        var amount = (quantity * rate) - discount;
        if (isNaN(amount)) {
            $("#SupplyOrderItems_" + row + "__Amount").val((0).toFixed(2));
        }
        else {
            $("#SupplyOrderItems_" + row + "__Amount").val(amount.toFixed(2));
        }
        calculateSummary();
    }

    function calculateSummary() {
        var amount = parseFloat("0.00");
        var discount = parseFloat("0.00");

        $('.clAmount').each(function (i, obj) {
            var a = parseFloat($("#SupplyOrderItems_" + i + "__Amount").val());
            if (isNaN(a)) {
                a = parseFloat("0.00");
            }
            amount = amount + a;
        });

        $("input[id$='__Discount']").each(function (index, object) {
            if (!isNaN($(object).val())) discount += Number($(object).val());
        })

        $("#QtyAmount").text(amount.toFixed(2));
        $("#discount-total").text(discount.toFixed(2));
    }

    $(function () {
        $("#SupplyOrderDate").datepicker({ dateFormat: "dd-MM-yy" });
        $("#RequiredDate").datepicker({ dateFormat: "dd-MM-yy" });
    });

    function Back() {
        var url = '@Url.Action("PendingSupplyOrder")';
        window.location = url;
    }

    //function formValidation() {
    //    if (Number($("#QtyAmount").text()) <= 0) {
    //        toastr.info("Total amount cannot be less than or equal to zero");
    //        return false;
    //    }
    //    else return true;
    //}
    function SupplierChanged(supplier) {
        var id;
        if ($(supplier).val() != null && $(supplier).val() != '')
            id = $(supplier).val();
        else
            id = 0;

        var ItemId = "";
        var url = '@Url.Action("GetSupplierItemRateSettings")';
        $('.itmcodes').each(function (i, obj) {

            var abc = $("#SupplyOrderItems_" + i + "__ItemId").val();
            $.ajax({
                url: url,
                data: { Id: id, ItemId: abc },
                cache: false,
                async: false,
                type: "GET",
                timeout: 10000,
                dataType: "json",
                success: function (result) {

                    if (result.Success) { // this sets the value from the response

                        //$('.clRate').each(function (i, obj) {

                        //var itmcode = $("#SupplyOrderItems_" + i + "__ItemId").val();

                        //if (itmcode == result.ItemId) {
                        $("#SupplyOrderItems_" + i + "__Rate").val(result.FixedRate.toFixed(2));
                        QuantityChanged(i);
                        //}
                        //else {
                        //alert("hi");
                        //}
                        //})
                    }
                }
            });
            //ItemId = ItemId + ',' + abc

        });



        $.ajax({
            url: "@Url.Action("GetPaymentTerm", "SupplyOrder")",
            data: { supplierid: id },
            cache: false,
            type: "GET",
            timeout: 10000,
            dataType: "json",
            success: function (result) {

                if (result.Success) { // this sets the value from the response

                    $('#PaymentTerms').val(result.PaymentTerms);
                } else {
                    $('#SomeOtherHtmlTextBox').val("Failed");
                }
            }
        });

    }

    function formValidation() {
        var status = true;
        var total = Number($("#QtyAmount").text());
        if (total <= 0) {
            toastr.info("Total amount should be greater than 0");
            status = false;
        }
        else {
            $("input[id$='__Rate']").each(function (index, object) {
                if (Number($(object).val()) <= 0 && $('#SupplyOrderItems_' + index + '__OrderedQty').val() > 0) {
                    toastr.info("Rate should be greater than zero");
                    status = false;
                    return false;
                }
            })
        }
        return status;
    }









</script>

<div class="row">
    <div class="form-head1">
        <h4>Supply Order / LPO</h4>
    </div>
    <div class="main-part pad1">
        @using (Html.BeginForm("Save", null, FormMethod.Post, new { @class = "createFrom", @id = "supplyorder_form", @onsubmit = "return formValidation()" }))
        {
            @Html.Partial("_formHeader")

            <div class="table-responsive" id="itemdetails">
                @Html.Partial("_grid")

            </div>

            @Html.Partial("_formFooter")

            <div class="row">

                <div class="col-md-12 hrpart">
                    <input type="button" class="form-button right" value="Exit" onclick="Back()" />
                    <button type="submit" class="form-button right">Save</button>
                </div>

            </div>

        }
    </div>
</div>



