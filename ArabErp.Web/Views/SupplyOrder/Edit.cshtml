@model ArabErp.Domain.SupplyOrder

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Edit Supply Order / LPO";
}

<script type="text/javascript">

    $(document).ready(function () {

        


        //$('#disabled-div').find('input[type="text"], textarea, select').attr('disabled', 'disabled');

        calculateSummary();

        //---------------------toastr---------------------------//
        toastr.options = {
            "positionClass": "toast-bottom-full-width",
            "timeOut": "5000",
            "extendedTimeOut": "2000"
        }
        if ('@TempData["success"]' != '') {
            toastr.success('@TempData["success"]');
        }
        else if ('@TempData["error"]' != '') {
            toastr.error('@TempData["error"]'.split('|')[0]);
            console.log('@TempData["error"]'.split('|')[1]);
        }
        @{ TempData["success"] = TempData["error"] = ""; }
        //------------------------------------------------------//
    })


    function GoToPrint(id) {
        var url = '@Url.Action("Print")';
        url += "?Id=" + id;
        window.location = url;
    }
    function calculateSummary() {
        var Discount = parseFloat($("#NetDiscount").val());
        var amount = parseFloat("0.00");
        $('.clAmount').each(function (i, obj) {
            var a = parseFloat($("#SupplyOrderItems_" + i + "__Amount").val());
            if (isNaN(a)) {
                a = parseFloat("0.00");
            }
            amount = amount + a;
        });
        var NetAmount = amount - Discount;
        $("#QtyAmount").text(amount.toFixed(2));
        $("#NetAmount").val(NetAmount.toFixed(2))
    }

    function Back() {
        var url = '@Url.Action("Index")';
        window.location = url;
    }

    function Delete(id) {
        //alert(id);
        var url = '@Url.Action("Delete")';
        url += "/" + id;

        window.location = url;
    }

    function ValidateRow(index) {
        var pending = Number($("#SupplyOrderItems_" + index + "__BalQty").val());
        var ordered = Number($("#SupplyOrderItems_" + index + "__OrderedQty").val());
        if (ordered > pending) {
            toastr.info("Ordered quantity cannot be more than pending quantity");
            $("#SupplyOrderItems_" + index + "__OrderedQty").val(pending);
            QuantityChanged(index);
        }
    }

    function QuantityChanged(row) {
        var quantity = $("#SupplyOrderItems_" + row + "__OrderedQty").val();
        var rate = $("#SupplyOrderItems_" + row + "__Rate").val();
        var discount = $("#SupplyOrderItems_" + row + "__Discount").val();
        var Discount = parseFloat($("#NetDiscount").val());

        if (quantity == NaN) {
            quantity = 0;
        }
        if (rate == NaN) {
            rate = 0;
        }
        if (discount == NaN) {
            discount = 0;
        }
        var amount = (quantity * rate) - discount;
        var NetAmount = amount - Discount;
        $("#SupplyOrderItems_" + row + "__Amount").val(amount.toFixed(2));
        $("#NetAmount").val(NetAmount.toFixed(2));
        calculateSummary();
    }

    $(function () {
        $("#SupplyOrderDate").datepicker({ dateFormat: "dd-MM-yy" });
        $("#RequiredDate").datepicker({ dateFormat: "dd-MM-yy" });
    });

    function formValidation() {
        if (Number($("#QtyAmount").text()) <= 0) {
            toastr.info("Total amount cannot be less than or equal to zero");
            return false;
        }
        else return true;
    }

    function SupplierChanged(supplier)
    {
        var id;
        if ($(supplier).val() != null && $(supplier).val() != '')
            id = $(supplier).val();
        else
            id = 0;

        var ItemId = "";
        var url = '@Url.Action("GetSupplierItemRateSettings")';
        $('.itmcodes').each(function (i, obj) {

            var abc = $("#SupplyOrderItems_" + i + "__ItemId").val();
            $.ajax({
                url: url,
                data: { Id: id, ItemId: abc },
                cache: false,
                async: false,
                type: "GET",
                timeout: 10000,
                dataType: "json",
                success: function (result) {

                    if (result.Success) { // this sets the value from the response

                        //$('.clRate').each(function (i, obj) {

                        //var itmcode = $("#SupplyOrderItems_" + i + "__ItemId").val();

                        //if (itmcode == result.ItemId) {
                        $("#SupplyOrderItems_" + i + "__Rate").val(result.FixedRate.toFixed(2));
                        QuantityChanged(i);
                        //}
                        //else {
                        //alert("hi");
                        //}
                        //})
                    }
                }
            });
            //ItemId = ItemId + ',' + abc

        });
        


        $.ajax({
            url: "@Url.Action("GetPaymentTerm", "SupplyOrder")",
            data: { supplierid: id },
        cache: false,
        type: "GET",
        timeout: 10000,
        dataType: "json",
        success: function (result) {
            
            if (result.Success) { // this sets the value from the response

                $('#PaymentTerms').val(result.PaymentTerms);
            } else {
                $('#SomeOtherHtmlTextBox').val("Failed");
            }
        }
    });
       
    }
</script>


<div class="row">
    <div class="form-head1">
        <h4>Supply Order / LPO</h4>
    </div>
    <div class="main-part pad1" id="disabled-div">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "createFrom", @id = "supplyorder_form", @onsubmit = "return formValidation()" }))
        {
            @Html.Partial("_formHeader")

            <div class="table-responsive">
                @Html.Partial("_grid")
            </div>

            @Html.Partial("_formFooter")

            <div class="row">
                <div class="col-md-12 hrpart">
                    <input type="button" class="form-button right" value="Exit" onclick="Back()" />
                    @if (Model.isUsed)
                    {
                        <span class="perm">
                            **Cannot edit/delete, because it is approved or already used.
                        </span>
                    }
                    else
                    {
                    <button type="submit" class="form-button right">Edit</button>
                 
                    <button type="button" class="form-button left" onclick="Delete('@Model.SupplyOrderId')">Delete</button>
                    }
                    <input type="button" value="Print" onclick="GoToPrint(@Model.SupplyOrderId)" class="form-button right" />
                </div>
            </div>
        }
    </div>
</div>


