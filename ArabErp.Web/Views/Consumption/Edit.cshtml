@model ArabErp.Domain.Consumption

@{
    ViewBag.Title = "Create Consumption";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">

    $(document).ready(function () {

        CalculateSummary();

        $("#ConsumptionNo").tooltip();

        $("#ConsumptionDate").datepicker({
            dateFormat: "dd-MM-yy"
        });

        toastr.options = {
            "closeButton": true,
            "positionClass": "toast-bottom-full-width",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "0",
            "extendedTimeOut": "0",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        if ('@TempData["success"]' != '') {
            toastr.success('@TempData["success"]');
        }
        else if ('@TempData["error"]' != '') {
            toastr.error('@TempData["error"]'.split('|')[0]);
            console.log('@TempData["error"]'.split('|')[1]);
        }
        @{ TempData["success"] = TempData["error"] = ""; }
    });

    function OnJobCardChanged(sender) {
        var id = $(sender).val();
        var url = '@Url.Action("JobCardDetails")';
        $.getJSON(url, { jobCardId: id }, function (data) {
            $("#JobCardDate").val(data.JobCardDate);
            $("#SONoDate").val(data.SONoDate);
            $("#FreezerUnitName").val(data.FreezerUnitName);
            $("#BoxName").val(data.BoxName);
        });
    }

    function formValidation() {
        if (Number($("#total").text()) == 0) {
            toastr.info("Total amount cannot be zero");
            return false;
        }
        else return true;
    }

    function Exit() {
        var url = '@Url.Action("Index", "Consumption")';
        window.location = url;
    }

</script>


<div class="row">
    <div class="form-head1">
        <h4>Consumption</h4>
    </div>

    <div class="main-part pad1">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "createFrom", @id = "consumption-form", @onsubmit = "return formValidation()" }))
        {
            @Html.HiddenFor(m => m.ConsumptionId)
            <div class="row form-group">
                <div class="col-md-2">
                    <label for="ConsumptionNo">Consumption Ref.No.</label>
                    @Html.TextBoxFor(m => m.ConsumptionNo, new { @class = "form_input", @readonly = "true", @title = "This number may change after saving" })
                </div>
                <div class="col-md-2">
                    <label for="ConsumptionDate">Date</label>
                    @Html.TextBoxFor(m => m.ConsumptionDate, Model.ConsumptionDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input", @required = "true" })
                </div>
            </div>

            <div class="row form-group">
                <div class="col-md-4">
                    <label for="JobCardId">Job Card</label>
                    @Html.DropDownListFor(m => m.JobCardId, (SelectList)ViewBag.jobcardList, "Select Job Card", new { @class = "form_input", @required = "true", @onchange = "OnJobCardChanged(this)" })
                </div>
                <div class="col-md-2">
                    <label for="JobCardDate">JobCard Date</label>
                    @Html.TextBoxFor(m => m.JobCardDate, new { @class = "form_input", @readonly = "true" })
                </div>
                <div class="col-md-2">
                    <label for="SONoDate">SO.No. &amp; Date</label>
                    @Html.TextBoxFor(m => m.SONoDate, new { @class = "form_input", @readonly = "true" })
                </div>
                <div class="col-md-2">
                    <label for="FreezerUnitName">Freezer Unit</label>
                    @Html.TextBoxFor(m => m.FreezerUnitName, new { @class = "form_input", @readonly = "true" })
                </div>
                <div class="col-md-2">
                    <label for="BoxName">Box</label>
                    @Html.TextBoxFor(m => m.BoxName, new { @class = "form_input", @readonly = "true" })
                </div>
            </div>

            <div class="table-responsive">
                @Html.Partial("_ConsumptionGrid")
            </div>

            <div class="row form-group">
                @*<div class="col-md-2">*@
                @*</div>*@
                <div class="col-md-12">
                    <label for="SpecialRemarks">Special Remarks</label>
                    @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 hrpart">
                    <input type="button" class="form-button right" onclick="Exit()" value="Exit" />
                    @*<input type="submit" class="form-button right" value="Edit" />
                    <input type="button" class="form-button left" onclick="Delete()" value="Delete" />*@
                </div>
            </div>
        }
    </div>
</div>





