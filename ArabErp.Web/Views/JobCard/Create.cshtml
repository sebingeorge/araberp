@model ArabErp.Domain.JobCard
@{
    ViewBag.Title = "Job Card";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    $(document).ready(function () {

        $('#saleorder_form').bootstrapValidator({
            fields: {
                JobCardNo: {
                    validators: {
                        notEmpty: {
                            message: 'Please enter jobcard no.'
                        }
                    }
                },
                JobCardDate: {
                    validators: {
                        notEmpty: {
                            message: 'Please select JobCard Date'
                        }
                    }
                },
                CustomerName: {
                    validators: {
                        notEmpty: {
                            message: 'Please select customer'
                        }
                    }
                }
            }
        });
        $("#BayId").focus();
    });
    $(function () {
        $("#JobCardDate").datepicker({ dateFormat: "dd-MM-yy" });
        $("#RequiredDate").datepicker({ dateFormat: "dd-MM-yy" });
        assignTaskDate();
    });

    function assignTaskDate() {
        $('.taskdate').each(function (i, obj) {
            //console.log(obj.id);
            $("#" + obj.id).removeClass("hasDatepicker");
            $("#" + obj.id).datepicker({ dateFormat: "dd-MM-yy" });
        });
    }

    function AddRowBelow(rNo) {
        var i = 0;
        var no = 0;
        $('.TaskRow').each(function (j, obj) {
            var row = Number(obj.id.replace("Row_", ""));
            console.log(j);
            i = j;
        });
        i++;

        console.log(i);

        var clone = $('#Row_0').clone();
        clone.html($(clone).html().replace(/\JobCardTasks_0__/g, 'JobCardTasks_' + i + '__'));
        clone.html($(clone).html().replace(/\JobCardTasks_0__/g, 'JobCardTasks_' + i + '__'));
        clone.html($(clone).html().replace(/\JobCardTasks[0]./g, 'JobCardTasks[' + i + '].'));
        clone.html($(clone).html().replace(/\[0\]/g, '[' + i + ']'));
        clone.html($(clone).html().replace(/\(0\)/g, '(' + i + ')'));
        clone.html($(clone).html().replace(/\Row_0/g, 'Row_' + i + ''));
        clone.html($(clone).html().replace(/this,0/g, "this," + i));
        //clone.html($(clone).html().replace(/Row_/, 'Row_' + i + ''));


        $("#tab_logic").append('<tr id="Row_' + i + '" class="TaskRow">' + clone.html() + '  </tr>');
        $('#Row_' + i).find('.taskdate').datepicker({ dateFormat: "dd-MM-yy" });
        assignTaskDate();
    }

    function DeleteRowBelow(index) {

        var i = 0;
        var no = 0;
        $('.TaskRow').each(function () {
            var id = this.id;
            no++;
            var row = Number(id.replace("Row_", ""));
            if (row > i) {
                i = row;
            }
        });
        i++;
        //alert(i);
        //$("#" + index).html('');
        if (i > 1) {
            $("#Row_" + index).remove();
            for (var j = index + 1; j < i; j++) {

                var TaskId = $("#JobCardTasks_" + j + "__JobCardTaskId").val();
                var Employee = $("#JobCardTasks_" + j + "__EmployeeId").val();
                var Date = $("#JobCardTasks_" + j + "__TaskDate").val();
                var Hours = $("#JobCardTasks_" + j + "__Hours").val();

                var clone = $("#Row_" + j).clone(true, true);
                clone.html($(clone).html().replace(new RegExp("JobCardTasks_" + j + "__", "g"), 'JobCardTasks_' + (j - 1) + '__'));
                clone.html($(clone).html().replace(new RegExp("\\[" + j + "].", "g"), "[" + (j - 1) + "]."));
                //clone.html($(clone).html().replace(new RegExp('Taskslno' + (j + 1) + '">' + (j + 1), "g"), 'Taskslno' + (j) + '">' + (j)));
                clone.html($(clone).html().replace("DeleteRowBelow(" + j, "DeleteRowBelow(" + (j - 1)));
                clone.html($(clone).html().replace("Row_" + j, "Row_" + (j - 1)));
                //clone.html($(clone).html().replace("Row_Task_" + j, "Row_Task_" + (j - 1)));
                clone.html($(clone).html().replace(new RegExp("this," + j, "g"), "this," + (j - 1)));
                $("#Row_" + j).html(clone.html());
                //$("#WorkVsTasks_" + (j - 1) + "__SlNo").val(j);
                $("#Row_" + (j)).attr('id', "Row_" + (j - 1));
                $("#JobCardTasks_" + (j - 1) + "__JobCardTaskId").val(TaskId);
                $("#JobCardTasks_" + (j - 1) + "__EmployeeId").val(Employee);
                $("#JobCardTasks_" + (j - 1) + "__TaskDate").val(Date);
                $("#JobCardTasks_" + (j - 1) + "__Hours").val(Hours);
            }
        }
    }

    function Exit() {

        @*var url = '@Url.Action("PendingJobCard", new { isProjectBased = Model.isProjectBased })';*@

        var url = '@Url.Action("PendingJobCard")';
        url += "?isProjectBased=" + @Model.isProjectBased + "&service=" + @Model.isService;
        window.location = url;
    }


    function formValidation() {
        var date = new Date($("#JobCardDate").val());
        var required = new Date($("#RequiredDate").val());
        if (date > required) {
            toastr.info("Required date cannot be less than Job Card date");
            return false;
        }

        var status = true;
        $(".validateqty").each(function (i, obj) {
            var Task = $("#JobCardTasks_" + i + "__JobCardTaskId").val();
            var Employee = $("#JobCardTasks_" + i + "__EmployeeId").val();
            var Hrs = $("#JobCardTasks_" + i + "__Hours").val();
            //alert(Task);
            //alert(Hrs);
            if (Task != '' && Employee != '' && Hrs == 0) {
                $("#JobCardTasks_" + i + "__Hours").focus();
                status = false;
            }
        });
        if (!status)
            alert("Hrs Should Be Greater than Zero");

        return status;
    }

    function CheckDuplication(sender, row) {
        var jobcard = $("#JobCardTasks_" + row + "__JobCardTaskId");
        var employee = $("#JobCardTasks_" + row + "__EmployeeId");
        var date = $("#JobCardTasks_" + row + "__TaskDate").val();
        var count = 0;

        $("select[id$='__JobCardTaskId']").each(function (index, object) {
            if ($("#JobCardTasks_" + index + "__JobCardTaskId").val() == $(jobcard).val()
                && $("#JobCardTasks_" + index + "__EmployeeId").val() == $(employee).val()
                && $("#JobCardTasks_" + index + "__TaskDate").val() == date)
                ++count;
        })

        if (count > 1) {
            toastr.info("This task has already been selected for this employee for on this date.");
            $(sender).val('');
        }
    }

</script>

<div class="row">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "createFrom", @id = "jobcard_form", @onsubmit = "return formValidation()" }))
    {
        <div class="form-head1">
            <h4>Job Card</h4>
        </div>
        <div class="main-part pad1">
            <form role="form">
                <div class="row form-group">
                    <div class="col-md-2">
                        <label for="JobCardNo">Job Card No.</label>
                        @Html.TextBoxFor(m => m.JobCardNo, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
                        @Html.HiddenFor(m => m.SaleOrderId)
                        @Html.HiddenFor(m => m.SaleOrderItemId)
                        @Html.HiddenFor(m => m.isProjectBased)
                        @Html.HiddenFor(m => m.isService)
                    </div>
                    <div class="col-md-2">
                        <label for="JobCardDate">Date</label>

                        @Html.TextBoxFor(m => m.JobCardDate, Model.JobCardDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @readonly = "readonly", @required = "true" })
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-md-4">
                        <label for="CustomerName">Customer</label>
                        @Html.TextBoxFor(m => m.CustomerName, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                        @Html.HiddenFor(m => m.CustomerId, new { @class = "form_input", autocomplete = "off" })
                    </div>
                    <div class="col-md-2">
                        <label for="CustomerOrderRef">Customer Order Ref.</label>
                        @Html.TextBoxFor(m => m.CustomerOrderRef, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                    </div>
                    <div class="col-md-2">
                        <label for="SaleOrderRefNo">Sale Order Ref. No.</label>
                        @Html.TextBoxFor(m => m.SaleOrderRefNo, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                    </div>
                    @if (Model.isProjectBased == 0)
                    {
                        <div class="col-md-2">
                            <label for="VehicleModelName">Vehicle Model</label>
                            @Html.TextBoxFor(m => m.VehicleModelName, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                        </div>
                        <div class="col-md-2">
                            <label for="RegistrationNo">Reg No./Chassis No.</label>
                            @Html.HiddenFor(m => m.InPassId)
                            @Html.TextBoxFor(m => m.RegistrationNo, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                            @*@Html.DropDownListFor(m => m.InPassId, (SelectList)ViewBag.inpassList, "Select Chassis/Reg No.", new { @class = "form_input", autocomplete = "off" })*@
                        </div>

                    }
                </div>
                @if (Model.isProjectBased == 0)
                {
                    <div class="row form-group">
                        <div class="col-md-12">
                            <label for="WorkDescription">Work Description</label>
                            @Html.TextBoxFor(m => m.WorkDescription, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                            @Html.HiddenFor(m => m.WorkDescriptionId, new { @class = "form_input", autocomplete = "off" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="row form-group">
                        @if (Model.isService == 1)
                        {
                            <div class="col-md-6">
                                <label for="wrkdes">Unit Details</label>
                                @Html.TextAreaFor(m => m.UnitDetails, new { @class = "form_input", autocomplete = "off", @readonly = "true", @style = "height:60px" })
                               
                            </div>
                            <div class="col-md-6">
                                <label for="wrkdes">Complaints</label>
                                @Html.TextAreaFor(m => m.Complaints, new { @class = "form_input", autocomplete = "off", @readonly = "true", @style = "height:60px" })
                            </div>
                        }
                        else
                        {
                            <div class="col-md-6">
                                <label for="wrkdes">Units</label>
                                @Html.TextAreaFor(m => m.Units, new { @class = "form_input", autocomplete = "off", @readonly = "true", @style = "height:60px" })
                                @*@Html.HiddenFor(m => m.WorkDescriptionId, new { @class = "form_input", autocomplete = "off" })*@
                            </div>
                            <div class="col-md-6">
                                <label for="wrkdes">Doors</label>
                                @Html.TextAreaFor(m => m.Doors, new { @class = "form_input", autocomplete = "off", @readonly = "true", @style = "height:60px" })
                                @*@Html.HiddenFor(m => m.WorkDescriptionId, new { @class = "form_input", autocomplete = "off" })*@
                            </div>
                        }

                    </div>
                }
                @if (Model.isProjectBased == 0)
                {
                    <div class="row form-group">
                        <div class="col-md-3">
                            <label for="FreezerUnitName">Freezer Unit</label>
                            @Html.HiddenFor(m => m.FreezerUnitId)
                            @Html.TextBoxFor(m => m.FreezerUnitName, new { @class = "form_input", @readonly = "true" })
                            @*@Html.DropDownListFor(m => Model.FreezerUnitId, (SelectList)ViewBag.FreezerUnits, "Select Freezer Unit", new { @class = "form_input", autocomplete = "off", @required = "true" })*@
                        </div>
                        @*//}*@
                        @*<div class="col-md-2">
                                <label for="goodsland">Goods Landed</label>
                                @Html.TextBoxFor(m => m.GoodsLanded, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                            </div>*@
                        @*@if (Model.isProjectBased == 0)
                            {*@
                        <div class="col-md-3">
                            <label for="BoxName">Box</label>
                            @Html.HiddenFor(m => m.BoxId)
                            @Html.TextBoxFor(m => m.BoxName, new { @class = "form_input", @readonly = "true" })
                            @*@Html.DropDownListFor(m => Model.BoxId, (SelectList)ViewBag.Boxes, "Select Box", new { @class = "form_input", autocomplete = "off", @required = "true" })*@
                        </div>
                        @*}*@

                        @*@if (Model.isProjectBased == 0)
                            {*@
                        <div class="col-md-2">
                            <label for="BayId">Bay</label>
                            @Html.DropDownListFor(m => Model.BayId, (SelectList)ViewBag.BayList, "Select Bay", new { @class = "form_input", autocomplete = "off", @required = "true" })
                        </div>
                    </div>
                    if(Model.isService ==0)
                    {
                       <div class="row form-group">
                        <div class="col-md-12">
                            <label for="accessories">Accessories</label>
                            @Html.TextBoxFor(m => m.Accessories, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                            @*@Html.HiddenFor(m => m.WorkDescriptionId, new { @class = "form_input", autocomplete = "off" })*@
                        </div>
                   </div>  
                    }
                }

                @if (Model.isService == 0)
                {
                    <div class="row form-group">
                        <div class="col-md-12">
                            <label for="Complaints">Complaints</label>
                            @Html.TextAreaFor(m => m.Complaints, new { @class = "form_input form_input-h" })
                        </div>
                    </div>
                }

                <div class=" table-responsive">
                    <table class="table table-bordered" id="tab_logic">
                        <thead>
                            <tr class="grid_heading">
                                <td width="2%"></td>
                                <th width="35%"><h1>Task</h1></th>
                                @*@if (Model.isProjectBased == 0)
                                    {*@
                                <th width="35%"><h1>Technician</h1></th>
                                @*}*@
                                <th width="12%"><h1>Date</h1></th>
                                <th width="5%"><h1>Hrs.</h1></th>
                                <td width="2%"></td>
                            </tr>
                        </thead>
                        <tbody class="grid_row">
                            @{ int row = 0;}
                            @foreach (var item in Model.JobCardTasks)
                            {
                                <tr id="Row_@row" class="TaskRow">
                                    <td>
                                        <a id="del_@row" class="glyphicon glyphicon-minus" onclick="DeleteRowBelow(@row);" style="top:0;"></a>
                                    </td>

                                    <td>
                                        @Html.DropDownListFor(m => Model.JobCardTasks[row].JobCardTaskId, (SelectList)ViewBag.TaskList, "Select Task", new { @class = "form_input", autocomplete = "off", @onchange = "CheckDuplication(this," + row + ")" })
                                    </td>
                                    @*@if (Model.isProjectBased == 0)
                                        {*@
                                    <td>
                                        @Html.DropDownListFor(m => Model.JobCardTasks[row].EmployeeId, (SelectList)ViewBag.EmployeeList, "Select Technician", new { @class = "form_input", autocomplete = "off", @onchange = "CheckDuplication(this," + row + ")" })
                                    </td>
                                    @*}*@
                                    <td>
                                        @Html.TextBoxFor(m => m.JobCardTasks[row].TaskDate, Model.JobCardTasks[row].TaskDate.ToString("dd/MMMM/yyyy"), new { @class = "taskdate form_input", autocomplete = "off", @readonly = "readonly", @onchange = "CheckDuplication(this," + row + ")" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m.JobCardTasks[row].Hours, new { @class = "form_input validateqty", autocomplete = "off" })
                                    </td>
                                    <td>
                                        <a id="add_@row" class="glyphicon glyphicon-plus" @*type="button" value="Add"*@ onclick="AddRowBelow(@row);" style="top:0;"></a>
                                    </td>
                                </tr>
                                row++;
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row form-group">
                    <div class="col-md-12">
                        <div class="row">

                            <div class="col-md-12">
                                <div class="part1">
                                    <label for="SpecialRemarks">Special Remarks</label>
                                    @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h", autocomplete = "off" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <label for="RequiredDate">Required Date</label>
                        @Html.TextBoxFor(m => m.RequiredDate, Model.RequiredDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @readonly = "readonly", @required = "true" })
                    </div>
                    <div class="col-md-3">
                        <label for="EmployeeId">Engineer/Supervisor</label>
                        @Html.DropDownListFor(m => Model.EmployeeId, (SelectList)ViewBag.EmployeeList, "Select Engineer/Supervisor", new { @class = "form_input", autocomplete = "off", @required = "true" })
                    </div>
                </div>


                <div class="row">

                    <div class="col-md-12 hrpart">
                        <button type="button" class="form-button right" onclick="Exit()">Exit</button>
                        <button type="submit" class="form-button right">Save</button>
                    </div>

                </div>

            </form>
        </div>
    }

</div>
