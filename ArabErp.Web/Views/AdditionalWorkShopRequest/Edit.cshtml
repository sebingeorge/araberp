@model ArabErp.Domain.WorkShopRequest

@{
    ViewBag.Title = "Create Additional Workshop Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">

    function Exit(isProjectBased) {

        var url = '@Url.Action("Index")';
        url +="?isProjectBased=" +isProjectBased;
        window.location = url;
    }
    function DeleteAddWr(id) {

        var url = '@Url.Action("Delete")';
        url += "?id=" + id;
        window.location = url;
    }

    $(document).ready(function () {

        $("#WorkShopRequestDate").datepicker({
            dateFormat: "dd-MM-yy"
        });
        $("#RequiredDate").datepicker({
            dateFormat: "dd-MM-yy"
        });

        $("#JobCardId").change(function () {
            var id = $(this).val();
            if (id != '') {
                var url = '@Url.Action("GetJobCardDetails")';
                $.getJSON(url, { jobCardId: id },
                    function (data) {
                        $("#SaleOrderId").val(data.SaleOrderId);
                        $("#SaleOrderRefNo").val(data.SaleOrderNo);
                        $("#CustomerName").val(data.Customer);
                        $("#CustomerId").val(data.CustomerId);
                        $("#CustomerOrderRef").val(data.CustomerOrderRef);
                        $("#CustomerOrderRefNo").val(data.CustomerOrderRef);
                    });
            }
            else {
                $("#SaleOrderId").val('');
                $("#SaleOrderRefNo").val('');
                $("#CustomerName").val('');
                $("#CustomerOrderRef").val('');
                $("#CustomerOrderRefNo").val('');
                $("#CustomerId").val('');
            }
        });
    });

    function formValidation() {
        return true;
    }

    function PreviousList() {
        var url = '@Url.Action("Index")';
        window.location = url;
    }

</script>

<div class="row">
    <div class="form-head1">
        <h4>Additional Workshop Request</h4>
    </div>
    <div class="main-part pad1">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "createFrom", onsubmit = "return formValidation()", @id = "Add_form" }))
        {
            <div class="row form-group">
                <div class="col-md-2">
                    <label for="WorkShopRequestRefNo">Request No.</label>
                    @Html.HiddenFor(m => m.isAdditionalRequest)
                    @Html.HiddenFor(m => m.WorkShopRequestId)
                    @Html.HiddenFor(m => m.isProjectBased)
                    @Html.TextBoxFor(m => m.WorkShopRequestRefNo, new { @class = "form_input", autocomplete = "off", @required = "true", @readonly = "true" })
                </div>
                <div class="col-md-2">
                    <label for="WorkShopRequestDate">Date</label>
                    @Html.TextBoxFor(m => m.WorkShopRequestDate, Model.WorkShopRequestDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input", autocomplete = "off", @required = "true" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-2">
                    <label for="JobCardId">Job Card</label>
                    @Html.HiddenFor(m => m.SaleOrderId)
                    @Html.HiddenFor(m => m.CustomerId)
                    @Html.HiddenFor(m => m.CustomerOrderRef)
                    @Html.DropDownListFor(m => m.JobCardId, (SelectList)ViewBag.JobCardList, "Select Job Card", new { @class = "form_input", autocomplete = "off", @required = "true" })
                </div>
                <div class="col-md-3">
                    <label for="SaleOrderRefNo">Sale Order No.</label>
                    @Html.TextBoxFor(m => m.SaleOrderRefNo, new { @class = "form_input", autocomplete = "off", @disabled = true })
                </div>
                <div class="col-md-4">
                    <label for="CustomerName">Customer</label>
                    @Html.TextBoxFor(m => m.CustomerName, new { @class = "form_input", autocomplete = "off", @disabled = true })
                </div>
                <div class="col-md-3">
                    <label for="CustomerOrderRef">Customer Order Ref.</label>
                    @Html.TextBoxFor(m => m.CustomerOrderRef, new { @class = "form_input", autocomplete = "off", @disabled = true })

                </div>
            </div>

            <div class=" table-responsive">
                @Html.Partial("_AdditionalItemsList", Model)
            </div>

            <div class="row form-group">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="part1">
                                <label for="SpecialRemarks">Special Remarks</label>
                                @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h", autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-md-2">
                    <div class="part1">
                        <label for="RequiredDate">Due Date</label>
                        @Html.TextBoxFor(m => m.RequiredDate, Model.RequiredDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input", autocomplete = "off", @required = "true" })
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-md-12 hrpart">
                    @*<button type="button" class="form-button right" onclick="ExitAdditional()">Exit</button>*@
                    @*<input type="button" class="form-button right" value="Exit1" onclick="ExitAdditional()" />*@
                    <input class="form-button right" type="button" value="Exit" onclick="Exit(@Model.isProjectBased)" />
                    @*<button type="button" class="form-button right" onclick="Exit();">Exit</button>*@
                    <input type="submit" class="form-button right" value="Edit">
                    @if (Model.Isused || Model.IsStoreused)
                    {
                        <span class="perm">
                            <em>**Cannot delete this Additional Workshop Request, because it is already in use.</em>
                        </span>
                    }
                    else
                    {
                       
                        <input type="button" value="Delete" onclick="DeleteAddWr(@Model.WorkShopRequestId)" class="form-button left" />

                    }
                </div>

            </div>
        }
    </div>
</div>
