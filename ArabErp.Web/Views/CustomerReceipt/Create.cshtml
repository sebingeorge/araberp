@model ArabErp.Domain.CustomerReceipt
@{
    ViewBag.Title = "Receipt Aganist Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{string actionName = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString(); }

<style>
    .divHidden {
        visibility: hidden;
    }

    .divShow {
        visibility: visible;
    }
</style>
<script>

    function Exit() {
        location.href = '@Url.Action("Index", "CustomerReceipt")';
    }

    $(document).ready(function () {
        var Action = '@actionName';
        if (Action == 'Delete') {

            $("input[type='text'], select, textarea").attr('disabled', 'disabled');
            $("input[type=radio]").attr('disabled', true);

        }
        if (Action == 'Create') {
            $("#GenderId").prop("checked", true)
        }

    });


    $(function () {
        $("#JcOrSo").val('@Model.Against');
        OptionChanged();
        $("#CustomerReceiptDate").datepicker({
            dateFormat: "d-MM-yy"
        });
    });

    function OptionChanged() {

        var Code = $('#CustomerId').val();
        var type = $("#JcOrSo").val();
        var url = '';
        //alert(type);
        $("#againstId").text($("#JcOrSo option:selected").text());

        $("SaleOrderAmount").text("");
        if (type == 'SO')
            url = '@Url.Action("SaleOrder")';
        else if (type == 'JC')
            url = '@Url.Action("JobCard")';
        else if (type == 'SI')
            url = '@Url.Action("SalesInvoice")';
        else if (type == 'Select') {
            $("#againstId").text("");
            $("#dynamic-combo").html('');
            $("SaleOrderAmount").text("");
        }

        if (url != '') {
            var id = 0;
            @if(Model.SalesInvoiceId != null)
            {
                @: id = '@Model.SalesInvoiceId';
            }
            else if (Model.SaleOrderId != null)
            {
            @: id = '@Model.SaleOrderId';
            }
            else if (Model.JobCardId != null)
            {
                @: id = '@Model.JobCardId';
            }

            $("#dynamic-combo").load(url, { Code: Code, id: id });

        }

    }

    function TotalAmount() {
        var type = $("#JcOrSo").val();

        if (type == 'SO')
            url = '@Url.Action("GETSOAMOUNT")';
        else if (type == 'JC')
            url = '@Url.Action("GETJCAMOUNT")';
        else if (type == 'SI')
            url = '@Url.Action("GETSIAMOUNT")';


        if(type == 'SO')
            var Id = $('#SaleOrderId').val();

        else if (type == 'JC')
            var Id = $('#JobCardId').val();

        else if (type == 'SI')
            var Id = $('#SalesInvoiceId').val();

        //alert(Id);

        $.ajax({
        url: url,
        data: { Id: Id },
        cache: false,
        type: "GET",
        timeout: 10000,
        dataType: "json",
        success: function (SaleOrderAmount) {

            $("#SaleOrderAmount").val(SaleOrderAmount);
        }
    });

    }

    function formValidation() {
        //var amount = $("#Amount").val();
        //alert(amount);

        if (Number($("#Amount").val()) == 0) {
            toastr.info("Amount cannot be less than zero");
            return false;
        }
        else if (Number($("#Amount").val()) > Number($("#SaleOrderAmount").val())) {
            toastr.info("Amount Should be less than Total Amount");
            return false;
        }
        else return true;
    }


</script>

<div class="row">

    <div class="form-head1">
        <h4>Receipt Aganist Customer</h4>
    </div>

    <div class="main-part pad1">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "CreateRequest", @id = "CustomerReceipt_form", @onsubmit = "return formValidation()" }))
        {

            <div class="row form-group">
                <div class="col-md-2">
                    @Html.HiddenFor(m => m.CustomerReceiptId)
                    <label for="CustomerReceiptRefNo">CR No.</label>
                    @Html.TextBoxFor(m => m.CustomerReceiptRefNo, new { @class = "form_input", autocomplete = "off", @required = "true" })

                </div>
                <div class="col-md-2">
                    <label for="CustomerReceiptDate">Date</label>
                    @Html.TextBoxFor(m => m.CustomerReceiptDate, Model.CustomerReceiptDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input", autocomplete = "off", @required = "true" })
                </div>
            </div>
            <div class="row form-group">
                <div class="col-md-4">
                    <label for="Customer">Customer</label>
                    @Html.DropDownListFor(m => m.CustomerId, (SelectList)ViewBag.Customer, "Select Customer", new { @class = "form_input", autocomplete = "off", @onchange = "OptionChanged()" })
                    @*@Html.Action("Customer")*@
                    @Html.HiddenFor(m => Model.CustomerId)
                </div>
            </div>

            <div class="row form-group">
                <div class="col-md-2">
                    <label>Against</label>
                    @Html.HiddenFor(m => m.Against)
                    <select class="form_input" id="JcOrSo" onchange="OptionChanged()">
                        <option>Select</option>
                        <option value="SO">Sale Order</option>
                        <option value="JC">Job Card</option>
                        <option value="SI">Sale Invoice</option>
                    </select>
                </div>

                <div class="col-md-2">
                    <label id="againstId"></label>
                    <div id="dynamic-combo">

                    </div>
                    @*@Html.DropDownListFor(m => Model.SaleOrderId, (SelectList)ViewBag.SO, "Select S.O", new { @class = "form_input divHidden", autocomplete = "off" })
                        @Html.DropDownListFor(m => Model.JobCardId, (SelectList)ViewBag.JC, "Select J.C", new { @class = "form_input divHidden against", autocomplete = "off" })
                        @Html.DropDownListFor(m => Model.SalesInvoiceId, (SelectList)ViewBag.SI, "Select S.I", new { @class = "form_input divHidden against", autocomplete = "off" })*@
                </div>
            </div>

            <div class="row form-group">
                <div class="col-md-2">
                    <div class="part4">
                        <label for="Amount">Total Amount</label>
                        @Html.TextBoxFor(m => m.SaleOrderAmount, new { @class = "form_input", autocomplete = "off", @readonly = "true" })
                    </div>

                </div>


                <div class="col-md-2">
                    <div class="part4">
                        <label for="Amount">Amount</label>
                        @Html.TextBoxFor(m => m.Amount, new { @class = "form_input", autocomplete = "off", @onchange = "formValidation()" })
                    </div>

                </div>

            </div>

            <div class="row form-group">
                <div class="col-md-12">
                    <div class="part1">
                        <label for="SpecialRemarks">Special Remarks</label>
                        @Html.TextAreaFor(m => m.SpecialRemarks, new { @class = "form_input form_input-h", autocomplete = "off" })
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-md-12 hrpart">

                    <button type="button" class="form-button right" onclick="Exit()">Exit</button>
                    @if (actionName == "CreateRequest")
                    {  <button type="submit" class="form-button right">Save</button>}
                    else if (actionName == "Edit")
                    {  <button type="submit" class="form-button right">Update</button>}
                    else if (actionName == "Delete")
                    { <button type="submit" class="form-button right">Delete</button> }

                </div>

            </div>

        }
    </div>
</div>
