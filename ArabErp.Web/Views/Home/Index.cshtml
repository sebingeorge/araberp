@model ArabErp.Domain.Dashboard
@{
    ViewBag.Title = "Home Page";
}
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>*@
<style type="text/css">
    $ {
        demo .css;
    }
</style>
<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script> 
@{
    string SOmonths = string.Empty;
    string SOdatas = string.Empty;
    string SQmonths = string.Empty;
    string SQdatas = string.Empty;
    string ASQdatas = string.Empty;
    string ProjectASQdatas = string.Empty;
    string TransportationASQdatas = string.Empty;
    string PurchaseData = string.Empty;
    string SalesData = string.Empty;
    string FGStock = Model.DashboardFGAllocated.TotalFG;
    string AllocatedFG = Model.DashboardFGAllocated.AllocatedFG;
    string AllocatedSO = Model.DashboardSaleOrderAllocated.AllocatedSaleOrders;
    string TotalSO = Model.DashboardSaleOrderAllocated.TotalSaleOrders;
    string JobCardDays = string.Empty;
    string JobCardCount = string.Empty;
    
    foreach (var item in Model.DashboardMonthlySalesOrders)
    {

        if (SOmonths == string.Empty)
        {
            SOmonths = "'" + item.SODate + "'";
        }
        else
        {
            SOmonths += ",'" + item.SODate + "'";
        }
        if (SOdatas == string.Empty)
        {
            SOdatas = "" + item.TotalAmount + "";
        }
        else
        {
            SOdatas += ", " + item.TotalAmount + "";
        }
    }
    foreach (var item in Model.DashboardTotalSalesQuotations)
    {
        if (SQmonths == string.Empty)
        {
            SQmonths = "'" + item.SODate + "'";
        }
        else
        {
            SQmonths += ",'" + item.SODate + "'";
        }
        if (SQdatas == string.Empty)
        {
            SQdatas = "" + item.Quotations + "";
        }
        else
        {
            SQdatas += ", " + item.Quotations + "";
        }
    }
    foreach (var item in Model.DashboardAcceptedSalesQuotations)
    {
        if (ASQdatas == string.Empty)
        {
            ASQdatas = "" + item.Quotations + "";
        }
        else
        {
            ASQdatas += ", " + item.Quotations + "";
        }
    }
    foreach (var item in Model.DashboardAcceptedProjectSalesQuotations)
    {
        if (ProjectASQdatas == string.Empty)
        {
            ProjectASQdatas = "" + item.Quotations + "";
        }
        else
        {
            ProjectASQdatas += ", " + item.Quotations + "";
        }
    }
    foreach (var item in Model.DashboardAcceptedTransportationSalesQuotations)
    {
        if (TransportationASQdatas == string.Empty)
        {
            TransportationASQdatas = "" + item.Quotations + "";
        }
        else
        {
            TransportationASQdatas += ", " + item.Quotations + "";
        }
    }
    foreach (var item in Model.DashboardPurchase)
    {
        if (PurchaseData == string.Empty)
        {
            PurchaseData = "" + item.Amount + "";
        }
        else
        {
            PurchaseData += ", " + item.Amount + "";
        }
    }
    foreach (var item in Model.DashboardSales)
    {
        if (SalesData == string.Empty)
        {
            SalesData = "" + item.Amount + "";
        }
        else
        {
            SalesData += ", " + item.Amount + "";
        }
    }
    foreach (var item in Model.DashboardJobCardCompletedDaily)
    {

        if (JobCardDays == string.Empty)
        {
            JobCardDays = "'" + item.JobcardDate + "'";
        }
        else
        {
            JobCardDays += ",'" + item.JobcardDate + "'";
        }
        if (JobCardCount == string.Empty)
        {
            JobCardCount = "" + item.JobCardCount + "";
        }
        else
        {
            JobCardCount += ", " + item.JobCardCount + "";
        }
    }
}
<script type="text/javascript">
    $(document).ready(function () {
        showSaleOrders();
        showSaleQuotations();
        showSalePurchase();
        showFGAllocated();
        showFGAllocatedSO();
        showJobCardCompleted();
    });

    function showSalePurchase() {
        chart1 = new Highcharts.Chart({
            chart: {
                type: 'column',
                renderTo: 'SalesAndPurchase'
            },
            title: {
                text: 'Sales Vs Purchase'
            },
            subtitle: {
                text: 'Monthly Sales Vs Purchase Comparison'
            },
            xAxis: {
                categories: [@Html.Raw(SQmonths)],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Amount (Q.R)'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: 'Sales',
                data: [@PurchaseData]

            }, {
                name: 'Purchase',
                data: [@SalesData]

            }]

        });
    }
    function showSaleQuotations()
    {
        chart1 = new Highcharts.Chart({
            chart: {
                type: 'spline',
                renderTo: 'SaleQuotation'
            },
            title: {
                text: 'Sale Quotations',
                x: -20 //center
            },
            subtitle: {
                text: 'Monthly Sale Quotation summary',
                x: -20
            },
            xAxis: {
                categories: [@Html.Raw(SQmonths)]
            },
            yAxis: {
                title: {
                    text: 'Sale Quotations'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                valueSuffix: ' numbers'
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                borderWidth: 0
            },
            series: [{
                name: 'Total Received',
                data: [@SQdatas]
            },
            {
                name: 'Total Accepted',
                data: [@ASQdatas]
            },
            {
                name: 'Accepted Project',
                data: [@ProjectASQdatas]
            },
            {
                name: 'Accepted Transportation',
                data: [@TransportationASQdatas]
            }]
        });
    }

    function showSaleOrders()
    {
        chart1 = new Highcharts.Chart({
            chart: {
                type: 'spline',
                renderTo: 'SaleOrder'
            },
            title: {
                text: 'Sale Orders',
                x: -20 //center
            },
            subtitle: {
                text: 'Monthly Sale order summary',
                x: -20
            },
            xAxis: {
                categories: [@Html.Raw(SOmonths)]
            },
            yAxis: {
                title: {
                    text: 'Sale Order Amount (x 10,000.00)'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                valueSuffix: ' x 10k Q.R'
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                borderWidth: 0
            },
            series: [{
                name: 'AARC',
                data: [@SOdatas]
            }]
        });
    }

    function showFGAllocated()
    {
        chart1 = new Highcharts.Chart({
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie',
                renderTo: 'FGAllocated'
            },
            title: {
                text: 'F.G Stock Vs Allocation'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        }
                    }
                }
            },
            series: [{
                name: 'Quantity',
                colorByPoint: true,
                data: [{
                    name: 'FG Stock',
                    y: @FGStock
                    }, {
                        name: 'Allocated',
                        y: @AllocatedFG,
                        sliced: true,
                        selected: true
                    }]
            }]
        });
    }

    function showFGAllocatedSO()
    {
        chart1 = new Highcharts.Chart({
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie',
                renderTo: 'FGAllocatedSO'
            },
            title: {
                text: 'F.G Stock Vs S.O Allocation'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        }
                    }
                }
            },
            series: [{
                name: 'Quantity',
                colorByPoint: true,
                data: [{
                    name: 'FG Stock',
                    y: @FGStock
                    }, {
                        name: 'Allocated',
                        y: @AllocatedSO,
                        sliced: true,
                        selected: true
                    }, {
                        name: 'Total S.O',
                        y: @TotalSO,
                    sliced: true,
                    selected: true
                }]
            }]
        });
    }

    function showJobCardCompleted() {
        chart1 = new Highcharts.Chart({
            chart: {
                type: 'column',
                renderTo: 'JobcardCompleted'
            },
            title: {
                text: 'Jobcards Completed'
            },
            subtitle: {
                text: 'No. Jobcards completed for the last 7 days.'
            },
            xAxis: {
                //type: 'category',
                categories: [@Html.Raw(JobCardDays)],
                labels: {
                    rotation: -45,
                    style: {
                        fontSize: '11px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
                @*rotation: -45,
                categories: [@Html.Raw(JobCardDays)],
                crosshair: true*@
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'No. Of Jobcards'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f}</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: 'No. Of Jobcards',
                data: [@JobCardCount]

            }]

        });
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        @{TempData["success"] = TempData["error"] = "";}
    })
</script>

<div class="body-content1">
    <div class="main-part pad1">
        <div class="row">
            <div class="col-md-12">
                
                <div id="jssor_1" style="position: relative; margin: 0 auto; top: 0px; left: 0px; width: 600px; height: 350px; overflow: hidden; visibility: hidden;">
                    <!-- Loading Screen -->
                    <div data-u="loading" style="position: absolute; top: 0px; left: 0px;">
                        <div style="filter: alpha(opacity=70); opacity: 0.7; position: absolute; display: block; top: 0px; left: 0px; width: 100%; height: 100%;"></div>
                        <div style="position:absolute;display:block;background:url('../../Content/images/loading.gif') no-repeat center center;top:0px;left:0px;width:100%;height:100%;"></div>
                    </div>
                    <div data-u="slides" style="cursor: default; position: relative; top: 0px; left: 0px; width: 600px; height: 300px; overflow: hidden;">
                        <div data-p="112.50" style="display: none;">
                            <div id="SaleQuotation" class="col-md-12 chart">
                            </div>
                            <div data-u="thumb">Sales Quotations</div>
                        </div>
                        <div data-p="112.50" style="display: none;">
                            <div id="SaleOrder" class="col-md-12 chart">
                            </div>
                            <div data-u="thumb">Sale Orders</div>
                        </div>
                        <div data-p="112.50" style="display: none;">
                            <div id="SalesAndPurchase" class="col-md-12 chart">
                            </div>
                            <div data-u="thumb">Sales vs Purchase</div>
                        </div>
                        <div data-p="112.50" style="display: none;">
                            <div id="FGAllocated" class="col-md-12 chart">
                            </div>
                            <div data-u="thumb">FG Allocated</div>
                        </div>
                        <div data-p="112.50" style="display: none;">
                            <div id="FGAllocatedSO" class="col-md-12 chart">
                            </div>
                            <div data-u="thumb">FG Stock vs Total S.O vs Allocated S.O</div>
                        </div>
                        <div data-p="112.50" style="display: none;">
                            <div id="JobcardCompleted" class="col-md-12 chart">
                            </div>
                            <div data-u="thumb">No. Jobcards completed for the last 7 days.</div>
                        </div>
                    </div>
                    <!-- Thumbnail Navigator -->
                    <div data-u="thumbnavigator" class="jssort09-600-45" style="position:absolute;bottom:0px;left:0px;width:600px;height:45px;">
                        <div style="position: absolute; top: 0; left: 0; width: 100%; height:100%; background-color: #000; filter:alpha(opacity=40.0); opacity:0.4;"></div>
                        <!-- Thumbnail Item Skin Begin -->
                        <div data-u="slides" style="cursor: default;">
                            <div data-u="prototype" class="p">
                                <div data-u="thumbnailtemplate" class="t"></div>
                            </div>
                        </div>
                        <!-- Thumbnail Item Skin End -->
                    </div>
                    <!-- Bullet Navigator -->
                    <div data-u="navigator" class="jssorb01" style="bottom:16px;right:16px;">
                        <div data-u="prototype" style="width:12px;height:12px;"></div>
                    </div>
                    <!-- Arrow Navigator -->
                    <span data-u="arrowleft" class="jssora05l" style="top:0px;left:8px;width:40px;height:40px;" data-autocenter="2"></span>
                    <span data-u="arrowright" class="jssora05r" style="top:0px;right:8px;width:40px;height:40px;" data-autocenter="2"></span>
                </div>
                
            </div>
        </div>
    </div>

    

</div>
