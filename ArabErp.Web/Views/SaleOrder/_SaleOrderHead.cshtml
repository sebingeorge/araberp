@model ArabErp.Domain.SaleOrder
@{ string actionName = ViewContext.RouteData.GetRequiredString("action");
 if (actionName == "CreateProject" || actionName=="Edit")
 {
     actionName = "Create";
 }
}
@{
    object displayMode = null;
    if (actionName == "Create")
    {
        displayMode = new { @class = "form_input", autocomplete = "off" };
    }
    else
    { displayMode = new { @class = "form_input", autocomplete = "off", @readonly = "readonly" }; }
}

<script>
    $(document).ready(function () {
      
        
        toastr.options = {
            "closeButton": true,
            "positionClass": "toast-bottom-full-width",
            "preventDuplicates": false,
            "onclick": null,
          
            "timeOut": "0",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        if ('@TempData["success"]' != "" && '@TempData["SaleOrderRefNo"]' != "" )
        {
            toastr.success('@TempData["success"]' + '   Sales Order No. is : ' + '@TempData["SaleOrderRefNo"]');
    }
    else if ('@TempData["error"]' != "") {
        toastr.error('@TempData["error"]');
    }
    });

</script>
<div class="row form-group ">
    <div class="col-md-2">
        <label for="SaleOrderRefNo">SO. No.</label>
        @Html.TextBoxFor(m => m.SaleOrderRefNo, new { @class = "form_input ", autocomplete = "off", @readonly = "readonly" })
      
    </div>
    <div class="col-md-2">
        <label for="SaleOrderDate">Date</label>
        @*@Html.TextBoxFor(m => m.SaleOrderDate, new { @class = "form_input ", autocomplete = "off", @readonly = "readonly" })*@
        @Html.TextBoxFor(m => m.SaleOrderDate, Model.SaleOrderDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @readonly = "readonly"})
    </div>
    <div class="col-md-2">
        <label for="BillNoDate">Quotation No. & Date</label>
        @Html.TextBoxFor(m => m.QuotationNoDate, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
        @Html.HiddenFor(m => m.QuotationNoDate, new { @class = "form_input", autocomplete = "off" })
        @Html.HiddenFor(m => m.SalesQuotationId, new { @class = "form_input", autocomplete = "off" })
    </div>
    @*<div class="col-md-2">
        <label for="selectCustomer">Quotation No.</label>
        @if (actionName == "Create")
        {
            @Html.DropDownListFor(m => Model.SalesQuotationId, (SelectList)ViewBag.QuotationNolist, "Select Quotation", new { @class = "form_input", autocomplete = "off", @onchange = "QuotationChanged(this);" })

        }
        else
        {
            @Html.DropDownListFor(m => Model.SalesQuotationId, (SelectList)ViewBag.QuotationNolist, "Select Quotation", new { @class = "form_input", autocomplete = "off", @disabled = "true" })
        }
    </div>*@
</div>
<div class="row form-group">
    <div class="col-md-4">
        <label for="selectCustomer">Customer</label>
        @*@if (actionName == "Create")
        {
            @Html.DropDownListFor(m => Model.CustomerId, (SelectList)ViewBag.customerlist, "Select Customer", new { @class = "form_input", autocomplete = "off", @onchange = "CustomerChanged(this);" })

        }
        else*@
        @*{*@
            @Html.HiddenFor(m => m.CustomerId, new { @class = "form_input", autocomplete = "off" })
            @Html.DropDownListFor(m => Model.CustomerId, (SelectList)ViewBag.customerlist, "Select Customer", new { @class = "form_input", autocomplete = "off", @disabled = "true" })
          @*}*@
     </div>
    <div class="col-md-6">
        <label for="CustomerOrderRef">Customer Address</label>
        @Html.TextBoxFor(m => m.CustomerAddress, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
    </div>
    <div class="col-md-2">
        <label for="CustomerOrderRef">Customer Order Ref.</label>
        @if (actionName == "Create")
        {
            @Html.TextBoxFor(m => m.CustomerOrderRef, new { @class = "form_input", autocomplete = "off", @required = "true" })
      }
        else
        {
            @Html.TextBoxFor(m => m.CustomerOrderRef, new { @class = "form_input", autocomplete = "off", @readonly = "readonly", @required = "true" })
      
        }
    </div>
   </div>
