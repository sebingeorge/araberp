@model ArabErp.Domain.SaleOrder
@{
    object displayMode = null;
    if (ViewData["action"].ToString() == "Create")
    {
        displayMode = new { @class = "form_input", autocomplete = "off" };
    }
    else
    { displayMode = new { @class = "form_input", autocomplete = "off", @readonly = "readonly" }; }
}

<script>
    $(document).ready(function () {
      
        
        toastr.options = {
            "closeButton": true,
            "positionClass": "toast-bottom-full-width",
            "preventDuplicates": false,
            "onclick": null,
          
            "timeOut": "0",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }
        if ('@TempData["success"]' != "" && '@TempData["SaleOrderRefNo"]' != "" )
        {
            toastr.success('@TempData["success"]' + '   Sales Order No. is : ' + '@TempData["SaleOrderRefNo"]');
    }
    else if ('@TempData["error"]' != "") {
        toastr.error('@TempData["error"]');
    }
    });

</script>
<div class="row form-group ">
    <div class="col-md-2">
        <label for="SaleOrderRefNo">SO.No.</label>
        @Html.TextBoxFor(m => m.SaleOrderRefNo, new { @class = "form_input ", autocomplete = "off", @readonly = "readonly" })
      
    </div>
    <div class="col-md-2">
        <label for="SaleOrderDate">Date</label>
        @*@Html.TextBoxFor(m => m.SaleOrderDate, new { @class = "form_input ", autocomplete = "off", @readonly = "readonly" })*@
        @Html.TextBoxFor(m => m.SaleOrderDate, Model.SaleOrderDate.ToString("dd/MMMM/yyyy"), new { @class = "form_input ", autocomplete = "off", @readonly = "readonly"})
    </div>
    <div class="col-md-2">
        <label for="selectCustomer">Quotation No.</label>
        @if (ViewData["action"].ToString() == "Create")
        {
            @Html.DropDownListFor(m => Model.SalesQuotationId, (SelectList)ViewBag.QuotationNolist, "Select Quotation", new { @class = "form_input", autocomplete = "off", @onchange = "QuotationChanged(this);" })

        }
        else
        {
            @*@Html.DropDownListFor(m => Model.SalesQuotationId, (SelectList)ViewBag.QuotationNolist, "Select Quotation", new { @class = "form_input", autocomplete = "off", @onchange = "QuotationChanged(this);", @disabled = "true" })*@
        }
    </div>
</div>
<div class="row form-group">
    <div class="col-md-4">
        <label for="selectCustomer">Customer</label>
        @if (ViewData["action"].ToString() == "Create")
        {
            @Html.DropDownListFor(m => Model.CustomerId, (SelectList)ViewBag.customerlist, "Select Customer", new { @class = "form_input", autocomplete = "off", @onchange = "CustomerChanged(this);" })

        }
        else
        {
            @Html.DropDownListFor(m => Model.CustomerId, (SelectList)ViewBag.customerlist, "Select Customer", new { @class = "form_input", autocomplete = "off", @onchange = "CustomerChanged(this);", @disabled = "true" })
        }
     </div>
    <div class="col-md-6">
        <label for="CustomerOrderRef">Customer Address</label>
        @Html.TextBoxFor(m => m.CustomerAddress, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
    </div>
    <div class="col-md-2">
        <label for="CustomerOrderRef">Customer Order Ref.</label>
        @if (ViewData["action"].ToString() == "Create")
        {
            @Html.TextBoxFor(m => m.CustomerOrderRef, new { @class = "form_input", autocomplete = "off" })
        }
        else
        {
            @Html.TextBoxFor(m => m.CustomerOrderRef, new { @class = "form_input", autocomplete = "off", @readonly = "readonly" })
      
        }
    </div>
   </div>
