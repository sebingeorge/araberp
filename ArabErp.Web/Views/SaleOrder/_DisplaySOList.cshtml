@model ArabErp.Domain.SaleOrder
<script>
    $(document).ready(function () {
        $("#Items_0__SlNo").val('1');
        $("#add_row").click(function () {
            var i = 0;
            var no = 1;
            $('input[id^="Row_"]').each(function () {
                var id = this.id;
                no++;
                var row = Number(id.replace("Row_", ""));
                if (row > i) {
                    i = row;
                }
            });
            i++;

            var index = (new Date()).getTime(); // unique indexer
            var clone = $('#0').clone(); // clone the BatchProducts item
            //Update the index of the clone
            //clone.html($(clone).html().replace("Items_0__", 'Items_' + i + '__'));
            clone.html($(clone).html().replace(/Items_0__/g, 'Items_' + i + '__'));
            clone.html($(clone).html().replace(/Items_0__/g, 'Items_' + i + '__'));
            clone.html($(clone).html().replace(/\Items[0]./g, 'Items[' + i + '].'));
            clone.html($(clone).html().replace(/\[0\]/g, '[' + i + ']'));
            clone.html($(clone).html().replace(/\(0\)/g, '(' + i + ')'));
            clone.html($(clone).html().replace(/Row_0/, 'Row_' + i + ''));
            clone.html($(clone).html().replace(/slno1/, 'slno' + (i + 1) + ''));
            clone.html($(clone).html().replace(/this,0/, 'this,' + i + ''));
            $("#tab_logic").append('<tr id="' + i + '">' + clone.html() + '  </tr>');
            $("#slno" + (i + 1)).html((i + 1));
            $("#Items_" + i + "__SlNo").val((i + 1));
        });
    });
    function Delete(index) {

        var i = 0;
        var no = 1;
        $('input[id^="Row_"]').each(function () {
            var id = this.id;
            no++;
            var row = Number(id.replace("Row_", ""));
            if (row > i) {
                i = row;
            }
        });
        i++;
        //$("#" + index).html('');
        if (i > 1) {
            $("#" + index).remove();
            for (var j = index + 1; j < i; j++) {
                var WorkDescriptionId = $("#Items_" + j + "__WorkDescriptionId").val();
                var VehicleModelId = $("#Items_" + j + "__VehicleModelId").val();
                var Quantity = $("#Items_" + j + "__Quantity").val();
                var UnitId = $("#Items_" + j + "__UnitId").val();
                var Rate = $("#Items_" + j + "__Rate").val();
                var Discount = $("#Items_" + j + "__Discount").val();
                var Amount = $("#Items_" + j + "__Amount").val();
                alert(WorkDescriptionId + ',' + VehicleModelId + ',' + Quantity + ',' + UnitId + ',' + Rate + ',' + Discount + ',' + Amount);

                var clone = $("#" + j).clone(true, true);
                clone.html($(clone).html().replace(new RegExp("Items_" + j + "__", "g"), 'Items_' + (j - 1) + '__'));
                clone.html($(clone).html().replace(new RegExp("\\[" + j + "].", "g"), "[" + (j - 1) + "]."));
                clone.html($(clone).html().replace(new RegExp('slno' + (j + 1) + '">' + (j + 1), "g"), 'slno' + (j) + '">' + (j)));
                clone.html($(clone).html().replace("Delete(" + j, "Delete(" + (j - 1)));
                clone.html($(clone).html().replace("Row_" + j, "Row_" + (j - 1)));

            


                clone.html($(clone).html().replace("this," + j, "this," + (j - 1)));
                $("#" + j).html(clone.html());
                $("#Items_" + (j - 1) + "__SlNo").val(j);
                $("#" + (j)).attr('id', (j - 1));
                alert(j);
                $("#Items_" + (j - 1) + "__WorkDescriptionId").val(WorkDescriptionId);
                $("#Items_" + (j - 1) + "__VehicleModelId").val(VehicleModelId);
                $("#Items_" + (j - 1) + "__Quantity").val(Quantity);
                $("#Items_" + (j - 1) + "__UnitId").val(UnitId);
                $("#Items_" + (j - 1) + "__Rate").val(Rate);
                $("#Items_" + (j - 1) + "__Discount").val(Discount);
                $("#Items_" + (j - 1) + "__Amount").val(Amount);
            }
        }
    }

    function QuantityChanged(row) {
        var quantity = $("#Items_" + row + "__Quantity").val();
        var rate = $("#Items_" + row + "__Rate").val();
        var discount = $("#Items_" + row + "__Discount").val();

        if (quantity == NaN) {
            quantity = 0;
        }
        if (rate == NaN) {
            rate = 0;
        }
        if (discount == NaN) {
            discount = 0;
        }
        var amount = (quantity * rate) - discount;
        $("#Items_" + row + "__Amount").val(amount);
        calculateSummary();
    }

    function calculateSummary() {
        var quantity = parseFloat("0");
        var amount = parseFloat("0");
        $('.clQuantity').each(function (i, obj) {
            var a = parseFloat($("#Items_" + i + "__Quantity").val());

            if (isNaN(a)) {
                a = parseFloat("0");
            }

            quantity = quantity + a;
        });

        $('.clAmount').each(function (i, obj) {
            var a = parseFloat($("#Items_" + i + "__Amount").val());
            if (isNaN(a)) {

                a = parseFloat("0");

            }

            amount = amount + a;
        });

        //$("#QtyTotal").text(quantity);
        $("#QtyAmount").text(amount);
    }

    function OnWorkChange(sender, index) {

        var id = $(sender).val();
        if (id != '') {
            var url = '@Url.Action("GetVehicleModel")';
            $.getJSON(url, { WorkDescriptionId: id },
                function (data) {
                    $("#Items_" + index + "__VehicleModelId").val(data.VehicleId);
                    $("#Items_" + index + "__VehicleModelName").val(data.VehicleName);
                });
        }
        else {

        }
    }



  


</script>


<div class="table-responsive">
    <table class="table table-bordered table-hover" id="tab_logic">
        <thead>
            <tr class="grid_heading">
                <th width="2%" class="text-center"><h1>#</h1></th>
                <th width="25%" class="text-center"><h1>Work Description</h1></th>
                <th width="25%" class="text-center"><h1>Vehicle Model</h1></th>
                <th width="5%" class="text-right"><h1>Qty</h1></th>
                <th width="10%"><h1>UoM</h1></th>
                <th width="10%" class="text-right"><h1>Rate</h1></th>
                <th width="10%" class="text-right"><h1>Discount</h1></th>
                <th width="8%" class="text-right"><h1>Amount</h1></th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody id="table_validation">
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                <tr id="@i">
                    <td>
                        <span id="slno@(i+1)">@(i + 1)</span>
                        @Html.HiddenFor(m => m.Items[i].SlNo)
                    </td>

                    <td>
                        <input type="hidden" id="Row_@i" />
                        @if (ViewData["action"].ToString() == "Create")
                        {
                            @Html.DropDownListFor(x => Model.Items[i].WorkDescriptionId, new SelectList(ViewBag.workdesclist, "Value", "Text", Model.Items[i].WorkDescriptionId), "select work description", new { @class = "form_input", autocomplete = "off", @onchange = "OnWorkChange(this," + i + ")" })

                        }
                        else
                        {
                            @Html.DropDownListFor(x => Model.Items[i].WorkDescriptionId, new SelectList(ViewBag.workdesclist, "Value", "Text", Model.Items[i].WorkDescriptionId), "select work description", new { @class = "form_input", autocomplete = "off", @disabled = "true" })
                        }

                    </td>

                    <td>
                        @if (ViewData["action"].ToString() == "Create")
                        {
                        @Html.TextBoxFor(m => m.Items[i].VehicleModelName, new { @class = "form_input ", @style = "text-align:left", autocomplete = "off", @readonly = "readonly" })
                             @Html.HiddenFor(m => m.Items[i].VehicleModelId)

                        @*@Html.DropDownListFor(x => Model.Items[i].VehicleModelId, new SelectList(ViewBag.vehiclelist, "Value", "Text", Model.Items[i].VehicleModelId), "select Vehicle", new { @class = "form_input", autocomplete = "off", @disabled = "true"})*@
                        }
                        else
                        {
                            @Html.DropDownListFor(x => Model.Items[i].VehicleModelId, new SelectList(ViewBag.vehiclelist, "Value", "Text", Model.Items[i].VehicleModelId), "select Vehicle", new { @class = "form_input", autocomplete = "off", @disabled = "true" })
                        }
                    </td>

                    <td>
                        @if (ViewData["action"].ToString() == "Create")
                        {
                            @Html.TextBoxFor(m => m.Items[i].Quantity, new { @class = "form_input clQuantity validateqty numbers-only", @style = "text-align:right", autocomplete = "off", placeholder = "Qty", @onchange = "QuantityChanged(" + i + ");" })

                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Items[i].Quantity, new { @class = "form_input clQuantity  ", @style = "text-align:right", autocomplete = "off", placeholder = "Qty", @onchange = "QuantityChanged(" + i + ");", @disabled = "true" })
                        }
                    </td>
                    <td>
                        @if (ViewData["action"].ToString() == "Create")
                        {
                            @Html.DropDownListFor(x => Model.Items[i].UnitId, new SelectList(ViewBag.unitlist, "Value", "Text", Model.Items[i].UnitId), "Select Unit", new { @class = "form_input", autocomplete = "off" })
                        }
                        else
                        {
                            @Html.DropDownListFor(x => Model.Items[i].UnitId, new SelectList(ViewBag.unitlist, "Value", "Text", Model.Items[i].UnitId), "Select Unit", new { @class = "form_input", autocomplete = "off", @disabled = "true" })
                         
                        }
                    </td>
                    <td>
                        @if (ViewData["action"].ToString() == "Create")
                        {
                            @Html.TextBoxFor(m => m.Items[i].Rate, new { @class = "form_input numbers-only clrate validateqty", autocomplete = "off", @style = "text-align:right", placeholder = "Rate", @onchange = "QuantityChanged(" + i + ");" })

                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Items[i].Rate, new { @class = "form_input", autocomplete = "off", @style = "text-align:right", placeholder = "Rate", @onchange = "QuantityChanged(" + i + ");", @disabled = "true" })
                        }
                    </td>
                    <td>
                        @if (ViewData["action"].ToString() == "Create")
                        {
                            @Html.TextBoxFor(m => m.Items[i].Discount, new { @class = "form_input numbers-only", autocomplete = "off", @style = "text-align:right", placeholder = "Discount", @onchange = "QuantityChanged(" + i + ");" })
                            
                        }
                        else
                        {
                           @Html.TextBoxFor(m => m.Items[i].Discount, new { @class = "form_input", autocomplete = "off", @style = "text-align:right", placeholder = "Discount", @onchange = "QuantityChanged(" + i + ");", @disabled = "true" })
                        }
                    </td>
                    <td>@Html.TextBoxFor(m => m.Items[i].Amount, new { @class = "form_input clAmount", autocomplete = "off", @style = "text-align:right", placeholder = "Amount", @disabled = "true" })</td>
                    <td style="vertical-align:middle"><a class="glyphicon glyphicon-minus" style="top:0px" onclick="Delete(@i)"></a></td>
                </tr>
            }
            @*<tr id='addr1'></tr>*@
        </tbody>
        <tfoot>
            <tr class="grid_heading">
                <th width="5%" class="text-center"><h1></h1></th>
                <th width="25%" class="text-center"><h1></h1></th>
                <th width="25%" class="text-center"><h1></h1></th>
                <th width="5%" class="text-right"><span id="QtyTotal"></span></th>
                <th width="10%"></th>
                <th width="10%" class="text-right"><h1>Total</h1></th>
                <th width="7%" class="text-right">
                    <h1>
                        @if (ViewData["action"].ToString() == "Create")
                        {
                            @Html.TextBoxFor(m => m.CurrencyName, new { @class = "form_input", autocomplete = "off", @style = "text-align:right;color:white", @disabled = "true" })
                            @Html.HiddenFor(m => m.CurrencyId)
                        }
                        else
                        {
                            @Html.DropDownListFor(m => Model.CurrencyId, (SelectList)ViewBag.currlist, "Select Currency", new { @class = "form_input", autocomplete = "off", @disabled = "true" })
                        
                        }
                    </h1>
                </th>
                <th width="8%" class="text-right"><span id="QtyAmount"></span></th>
                <th>&nbsp;</th>
            </tr>
        </tfoot>
    </table>
</div>
<a id="add_row" class="glyphicon glyphicon-plus" onclick="AddAdditionRow()"></a>
@*<a id='delete_row' style="float:right" class="glyphicon glyphicon-minus"></a>*@
   

